/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI469763374 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078600 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078607 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI469763038 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555126 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554437 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI469763177 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
NTI469763177.base = NTI33554437;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI33555126 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555126.node = NNI33555126;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
NTI33555126.base = NTI33555125;
var NNI469763038 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554437, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554437, name: "Field1", sons: null}]};
NTI469763038.node = NNI469763038;
var NNI973078607 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI973078600, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI973078607.node = NNI973078607;
var NNI469763374 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554437, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554437, name: "Field1", sons: null}]};
NTI469763374.node = NNI469763374;

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}

function eqStrings(a_33556931, b_33556932) {
        if (a_33556931 == b_33556932) return true;
    if (a_33556931 === null && b_33556932.length == 0) return true;
    if (b_33556932 === null && a_33556931.length == 0) return true;
    if ((!a_33556931) || (!b_33556932)) return false;
    var alen = a_33556931.length;
    if (alen != b_33556932.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556931[i] != b_33556932[i]) return false;
    return true;
  

  
}
                  var gradeLetters_469762074 = [makeNimstrLit("A+"), makeNimstrLit("A"), makeNimstrLit("A-"), makeNimstrLit("B+"), makeNimstrLit("B"), makeNimstrLit("B-"), makeNimstrLit("C+"), makeNimstrLit("C"), makeNimstrLit("C-"), makeNimstrLit("D+"), makeNimstrLit("D"), makeNimstrLit("D-"), makeNimstrLit("F")];
              var halfYear_469763466 = [makeNimstrLit("Business Law"), makeNimstrLit("Computer Applications"), makeNimstrLit("Entrepreneurship"), makeNimstrLit("Fashion Marketing"), makeNimstrLit("Financial Literacy"), makeNimstrLit("International Business"), makeNimstrLit("Sports & Entertainment Management"), makeNimstrLit("Computer Science"), makeNimstrLit("Java Honors"), makeNimstrLit("Advanced Java Honors"), makeNimstrLit("Web Design"), makeNimstrLit("Creative Writing I"), makeNimstrLit("Creative Writing II Honors"), makeNimstrLit("Film Study"), makeNimstrLit("Forensics I"), makeNimstrLit("Forensics II"), makeNimstrLit("Parcc English"), makeNimstrLit("Ceramics I"), makeNimstrLit("Ceramics II"), makeNimstrLit("Ceramics III"), makeNimstrLit("Crafts I"), makeNimstrLit("Crafts II"), makeNimstrLit("Photography"), makeNimstrLit("Advanced Photography"), makeNimstrLit("Culinary Arts I"), makeNimstrLit("Foods Around the World"), makeNimstrLit("Culinary Arts II"), makeNimstrLit("Child Development I"), makeNimstrLit("Child Development II"), makeNimstrLit("Child Development III"), makeNimstrLit("Interior Design I"), makeNimstrLit("Interior Design II"), makeNimstrLit("Introduction to Technology"), makeNimstrLit("Technology II"), makeNimstrLit("Strategic Design"), makeNimstrLit("Video and Broadcast Production I"), makeNimstrLit("Video and Broadcast Production II"), makeNimstrLit("Broadway Workshop"), makeNimstrLit("Math Lab"), makeNimstrLit("Parcc Mathematics"), makeNimstrLit("Economics"), makeNimstrLit("Economics Honors"), makeNimstrLit("Psychology"), makeNimstrLit("Advanced Psychology"), makeNimstrLit("Sociology")];
              var labs_469763467 = [makeNimstrLit("Biology"), makeNimstrLit("Biology Enriched"), makeNimstrLit("Biology Honors"), makeNimstrLit("Ap Biology"), makeNimstrLit("Principles in Anatomy"), makeNimstrLit("Anatomy & Physiology"), makeNimstrLit("Research in Molecular Biology"), makeNimstrLit("Chemistry"), makeNimstrLit("Chemistry Enriched"), makeNimstrLit("Chemistry Honors"), makeNimstrLit("AP Chemistry"), makeNimstrLit("Physics Enriched"), makeNimstrLit("Physics Honors"), makeNimstrLit("AP Physics C: Mechanics"), makeNimstrLit("AP Physics C: Electricity & Magnetism"), makeNimstrLit("AP Environmental Science"), makeNimstrLit("Science Research Program I"), makeNimstrLit("Science Research Program II"), makeNimstrLit("Science Research Program III")];
              var semester_469763468 = [makeNimstrLit("Forensic Science"), makeNimstrLit("Robotics Engineering")];

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}

function mulInt(a_33556948, b_33556949) {
        var result = a_33556948 * b_33556949;
    checkOverflowInt(result);
    return result;
  

  
}

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}
            var gpaAp_469763465 = {data: [{Field0: 919786464, Field1: makeNimstrLit("B-"), Field2: 3.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1673550086, Field1: makeNimstrLit("D"), Field2: 2.0}, {Field0: -1742008058, Field1: makeNimstrLit("F"), Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -861508982, Field1: makeNimstrLit("B"), Field2: 4.0}, {Field0: 2060572171, Field1: makeNimstrLit("B+"), Field2: 4.3}, {Field0: -367198581, Field1: makeNimstrLit("C"), Field2: 3.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1423767502, Field1: makeNimstrLit("A"), Field2: 5.0}, {Field0: 142754382, Field1: makeNimstrLit("A-"), Field2: 4.7}, {Field0: -1437737522, Field1: makeNimstrLit("C+"), Field2: 3.3}, {Field0: -10184399, Field1: makeNimstrLit("A+"), Field2: 5.3}, {Field0: -1818831855, Field1: makeNimstrLit("D+"), Field2: 2.3}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1598464886, Field1: makeNimstrLit("C-"), Field2: 2.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -586780232, Field1: makeNimstrLit("D-"), Field2: 1.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}], counter: 13};
            var gpaHonors_469763460 = {data: [{Field0: 919786464, Field1: makeNimstrLit("B-"), Field2: 3.2}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1673550086, Field1: makeNimstrLit("D"), Field2: 1.5}, {Field0: -1742008058, Field1: makeNimstrLit("F"), Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -861508982, Field1: makeNimstrLit("B"), Field2: 3.5}, {Field0: 2060572171, Field1: makeNimstrLit("B+"), Field2: 3.8}, {Field0: -367198581, Field1: makeNimstrLit("C"), Field2: 2.5}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1423767502, Field1: makeNimstrLit("A"), Field2: 4.5}, {Field0: 142754382, Field1: makeNimstrLit("A-"), Field2: 4.2}, {Field0: -1437737522, Field1: makeNimstrLit("C+"), Field2: 2.8}, {Field0: -10184399, Field1: makeNimstrLit("A+"), Field2: 4.8}, {Field0: -1818831855, Field1: makeNimstrLit("D+"), Field2: 1.8}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1598464886, Field1: makeNimstrLit("C-"), Field2: 2.2}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -586780232, Field1: makeNimstrLit("D-"), Field2: 1.2}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}], counter: 13};
              var gpaRegular_469763455 = {data: [{Field0: 919786464, Field1: makeNimstrLit("B-"), Field2: 2.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1673550086, Field1: makeNimstrLit("D"), Field2: 1.0}, {Field0: -1742008058, Field1: makeNimstrLit("F"), Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -861508982, Field1: makeNimstrLit("B"), Field2: 3.0}, {Field0: 2060572171, Field1: makeNimstrLit("B+"), Field2: 3.3}, {Field0: -367198581, Field1: makeNimstrLit("C"), Field2: 2.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1423767502, Field1: makeNimstrLit("A"), Field2: 4.0}, {Field0: 142754382, Field1: makeNimstrLit("A-"), Field2: 3.7}, {Field0: -1437737522, Field1: makeNimstrLit("C+"), Field2: 2.3}, {Field0: -10184399, Field1: makeNimstrLit("A+"), Field2: 4.3}, {Field0: -1818831855, Field1: makeNimstrLit("D+"), Field2: 1.3}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1598464886, Field1: makeNimstrLit("C-"), Field2: 1.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -586780232, Field1: makeNimstrLit("D-"), Field2: 0.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}], counter: 13};
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr(46, 44);

function nimCharToStr(x_33556517) {
  var result_33556518 = [];

    result_33556518 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556518[0] = x_33556517;

  return result_33556518;

}
var ConstSet10 = setConstr([65, 90]);
var ConstSet11 = setConstr([97, 122]);

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}
var ConstSet12 = setConstr([48, 57]);
var ConstSet13 = setConstr([48, 57]);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_687866018 = [0];

function newSeq_452985301(len_452985303) {
  var result_452985304 = [];

    result_452985304 = new Array(len_452985303); for (var i = 0 ; i < len_452985303 ; ++i) { result_452985304[i] = []; }
  return result_452985304;

}

function newSeq_469763528(len_469763530) {
  var result_469763531 = [];

    result_469763531 = new Array(len_469763530); for (var i = 0 ; i < len_469763530 ; ++i) { result_469763531[i] = 0.0; }
  return result_469763531;

}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_469764844 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764844 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_469764844;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_469764844 = addInt(i_469764844, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function nsuFindChar(s_939525624, sub_939525625, start_939525626, last_939525627) {
    var Temporary1;

  var result_939525628 = 0;

  BeforeRet: do {
    if ((last_939525627 == 0)) {
    Temporary1 = (s_939525624).length - 1;
    }
    else {
    Temporary1 = last_939525627;
    }
    
    var last_939525629 = Temporary1;
    Label2: do {
      var i_939525639 = 0;
      var colontmp__469764851 = 0;
      colontmp__469764851 = start_939525626;
      var res_469764852 = colontmp__469764851;
      Label3: do {
          Label4: while (true) {
          if (!(res_469764852 <= last_939525629)) break Label4;
            i_939525639 = res_469764852;
            if ((sub_939525625 == s_939525624[chckIndx(i_939525639, 0, (s_939525624).length - 1)])) {
            result_939525628 = i_939525639;
            break BeforeRet;
            }
            
            res_469764852 = addInt(res_469764852, 1);
          }
      } while (false);
    } while (false);
    result_939525628 = -1;
    break BeforeRet;
  } while (false);

  return result_939525628;

}

function nsuFindStrA(a_939525604, s_939525605, sub_939525606, start_939525607, last_939525608) {
    var Temporary1;

  var result_939525609 = 0;

  BeforeRet: do {
    if ((last_939525608 == 0)) {
    Temporary1 = (s_939525605).length - 1;
    }
    else {
    Temporary1 = last_939525608;
    }
    
    var last_939525610 = Temporary1;
    var subLast_939525611 = subInt((sub_939525606).length, 1);
    if ((subLast_939525611 == -1)) {
    result_939525609 = start_939525607;
    break BeforeRet;
    }
    
    var skip_939525612 = start_939525607;
    Label2: do {
        Label3: while (true) {
        if (!(subLast_939525611 <= subInt(last_939525610, skip_939525612))) break Label3;
          var i_939525613 = subLast_939525611;
          Label4: do {
              Label5: while (true) {
              if (!(s_939525605[chckIndx(addInt(skip_939525612, i_939525613), 0, (s_939525605).length - 1)] == sub_939525606[chckIndx(i_939525613, 0, (sub_939525606).length - 1)])) break Label5;
                if ((i_939525613 == 0)) {
                result_939525609 = skip_939525612;
                break BeforeRet;
                }
                
                i_939525613 = subInt(i_939525613, 1);
              }
          } while (false);
          skip_939525612 = addInt(skip_939525612, a_939525604[chckIndx(s_939525605[chckIndx(addInt(skip_939525612, subLast_939525611), 0, (s_939525605).length - 1)], 0, (a_939525604).length - 1)]);
        }
    } while (false);
    result_939525609 = -1;
    break BeforeRet;
  } while (false);

  return result_939525609;

}

function fill_939525563(a_939525565, value_939525566) {
    var xHEX60gensym166_939525572 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(xHEX60gensym166_939525572 <= (a_939525565).length - 1)) break Label2;
          a_939525565[chckIndx(xHEX60gensym166_939525572, 0, (a_939525565).length - 1)] = value_939525566;
          xHEX60gensym166_939525572 = addInt(xHEX60gensym166_939525572, 1);
        }
    } while (false);

  
}

function nsuInitSkipTable(a_939525560, sub_939525561) {
    var m_939525562 = (sub_939525561).length;
    fill_939525563(a_939525560, m_939525562);
    Label1: do {
      var i_939525581 = 0;
      var colontmp__469764857 = 0;
      colontmp__469764857 = subInt(m_939525562, 1);
      var i_469764858 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764858 < colontmp__469764857)) break Label3;
            i_939525581 = i_469764858;
            a_939525560[chckIndx(sub_939525561[chckIndx(i_939525581, 0, (sub_939525561).length - 1)], 0, (a_939525560).length - 1)] = subInt(subInt(m_939525562, 1), i_939525581);
            i_469764858 = addInt(i_469764858, 1);
          }
      } while (false);
    } while (false);

  
}

function nsuInitNewSkipTable(sub_939525601) {
  var result_939525602 = [new Int32Array(256)];

    nsuInitSkipTable(result_939525602[0], sub_939525601);

  return result_939525602[0];

}

function nsuFindStr(s_939525657, sub_939525658, start_939525659, last_939525660) {
  var result_939525661 = 0;

  BeforeRet: do {
    if ((subInt((s_939525657).length, start_939525659) < (sub_939525658).length)) {
    result_939525661 = -1;
    break BeforeRet;
    }
    
    if (((sub_939525658).length == 1)) {
    result_939525661 = nsuFindChar(s_939525657, sub_939525658[chckIndx(0, 0, (sub_939525658).length - 1)], start_939525659, last_939525660);
    break BeforeRet;
    }
    
    result_939525661 = nsuFindStrA(nsuInitNewSkipTable(sub_939525658), s_939525657, sub_939525658, start_939525659, last_939525660);
  } while (false);

  return result_939525661;

}

function contains_939525784(s_939525785, sub_939525786) {
  var result_939525787 = false;

  BeforeRet: do {
    result_939525787 = (0 <= nsuFindStr(s_939525785, sub_939525786, 0, 0));
    break BeforeRet;
  } while (false);

  return result_939525787;

}

function find_973078576(a_973078579, item_973078580) {
  var result_973078581 = 0;

  BeforeRet: do {
    result_973078581 = 0;
    Label1: do {
      var i_973078585 = [];
      var i_469764863 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764863 < (a_973078579).length)) break Label3;
            i_973078585 = a_973078579[chckIndx(i_469764863, 0, (a_973078579).length - 1)];
            if (eqStrings(i_973078585, item_973078580)) {
            break BeforeRet;
            }
            
            result_973078581 = addInt(result_973078581, 1);
            i_469764863 = addInt(i_469764863, 1);
          }
      } while (false);
    } while (false);
    result_973078581 = -1;
  } while (false);

  return result_973078581;

}

function contains_973078571(a_973078573, item_973078574) {
  var result_973078575 = false;

  BeforeRet: do {
    result_973078575 = (0 <= find_973078576(a_973078573, item_973078574));
    break BeforeRet;
  } while (false);

  return result_973078575;

}

function HEX2BHEX3D_939526192(x_939526194, x_939526194_Idx, y_939526195) {
    x_939526194[x_939526194_Idx] = (x_939526194[x_939526194_Idx] + y_939526195);

  
}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function imul_687866173(a_687866174, b_687866175) {
  var result_687866176 = 0;

    var mask_687866177 = 65535;
    var aHi_687866182 = ((a_687866174 >>> 16) & mask_687866177);
    var aLo_687866183 = (a_687866174 & mask_687866177);
    var bHi_687866188 = ((b_687866175 >>> 16) & mask_687866177);
    var bLo_687866189 = (b_687866175 & mask_687866177);
    result_687866176 = ((((aLo_687866183 * bLo_687866189) >>> 0) + (((((aHi_687866182 * bLo_687866189) >>> 0) + ((aLo_687866183 * bHi_687866188) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_687866176;

}

function rotl32_687866194(x_687866195, r_687866196) {
  var result_687866197 = 0;

    result_687866197 = ((x_687866195 << r_687866196) | (x_687866195 >>> subInt(32, r_687866196)));

  return result_687866197;

}

function murmurHash_687866206(x_687866207) {
  var result_687866208 = 0;

  BeforeRet: do {
    var size_687866217 = (x_687866207).length;
    var stepSize_687866218 = 4;
    var n_687866219 = divInt(size_687866217, stepSize_687866218);
    var h1_687866220 = 0;
    var i_687866221 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_687866221 < mulInt(n_687866219, stepSize_687866218))) break Label2;
          var k1_687866222 = 0;
          var j_687866223 = stepSize_687866218;
          Label3: do {
              Label4: while (true) {
              if (!(0 < j_687866223)) break Label4;
                j_687866223 = subInt(j_687866223, 1);
                k1_687866222 = ((k1_687866222 << 8) | x_687866207[chckIndx(addInt(i_687866221, j_687866223), 0, (x_687866207).length - 1)]);
              }
          } while (false);
          i_687866221 = addInt(i_687866221, stepSize_687866218);
          k1_687866222 = imul_687866173(k1_687866222, 3432918353);
          k1_687866222 = rotl32_687866194(k1_687866222, 15);
          k1_687866222 = imul_687866173(k1_687866222, 461845907);
          h1_687866220 = (h1_687866220 ^ k1_687866222);
          h1_687866220 = rotl32_687866194(h1_687866220, 13);
          h1_687866220 = ((((h1_687866220 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    var k1_687866240 = 0;
    var rem_687866241 = modInt(size_687866217, stepSize_687866218);
    Label5: do {
        Label6: while (true) {
        if (!(0 < rem_687866241)) break Label6;
          rem_687866241 = subInt(rem_687866241, 1);
          k1_687866240 = ((k1_687866240 << 8) | x_687866207[chckIndx(addInt(i_687866221, rem_687866241), 0, (x_687866207).length - 1)]);
        }
    } while (false);
    k1_687866240 = imul_687866173(k1_687866240, 3432918353);
    k1_687866240 = rotl32_687866194(k1_687866240, 15);
    k1_687866240 = imul_687866173(k1_687866240, 461845907);
    h1_687866220 = (h1_687866220 ^ k1_687866240);
    h1_687866220 = (h1_687866220 ^ size_687866217);
    h1_687866220 = (h1_687866220 ^ (h1_687866220 >>> 16));
    h1_687866220 = imul_687866173(h1_687866220, 2246822507);
    h1_687866220 = (h1_687866220 ^ (h1_687866220 >>> 13));
    h1_687866220 = imul_687866173(h1_687866220, 3266489909);
    h1_687866220 = (h1_687866220 ^ (h1_687866220 >>> 16));
    result_687866208 = (h1_687866220 | 0);
    break BeforeRet;
  } while (false);

  return result_687866208;

}

function hash_687866305(x_687866306) {
  var result_687866307 = 0;

    result_687866307 = murmurHash_687866206((x_687866306.slice(0, (x_687866306).length - 1 + 1)));

  return result_687866307;

}

function isFilled_671088671(hcode_671088672) {
  var result_671088673 = false;

    result_671088673 = !((hcode_671088672 == 0));

  return result_671088673;

}

function nextTry_671088674(h_671088675, maxHash_671088676) {
  var result_671088677 = 0;

    result_671088677 = (addInt(h_671088675, 1) & maxHash_671088676);

  return result_671088677;

}

function rawGet_469762223(t_469762226, key_469762227, hc_469762228, hc_469762228_Idx) {
            var Temporary3;

  var result_469762229 = 0;

  BeforeRet: do {
    hc_469762228[hc_469762228_Idx] = hash_687866305(key_469762227);
    if ((hc_469762228[hc_469762228_Idx] == 0)) {
    hc_469762228[hc_469762228_Idx] = 314159265;
    }
    
    if (((t_469762226.data).length == 0)) {
    result_469762229 = -1;
    break BeforeRet;
    }
    
    var h_469762280 = (hc_469762228[hc_469762228_Idx] & (t_469762226.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_671088671(t_469762226.data[chckIndx(h_469762280, 0, (t_469762226.data).length - 1)].Field0)) break Label2;
            if (!(t_469762226.data[chckIndx(h_469762280, 0, (t_469762226.data).length - 1)].Field0 == hc_469762228[hc_469762228_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_469762226.data[chckIndx(h_469762280, 0, (t_469762226.data).length - 1)].Field1, key_469762227);            }          if (Temporary3) {
          result_469762229 = h_469762280;
          break BeforeRet;
          }
          
          h_469762280 = nextTry_671088674(h_469762280, (t_469762226.data).length - 1);
        }
    } while (false);
    result_469762229 = subInt(-1, h_469762280);
  } while (false);

  return result_469762229;

}

function raiseKeyError_620758759(key_620758761) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_620758761 || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_469764038(t_469764041, key_469764042) {
  var result_469764043 = 0.0;

    var hcHEX60gensym20_469764044 = [0];
    var indexHEX60gensym20_469764051 = rawGet_469762223(t_469764041, key_469764042, hcHEX60gensym20_469764044, 0);
    if ((0 <= indexHEX60gensym20_469764051)) {
    result_469764043 = t_469764041.data[chckIndx(indexHEX60gensym20_469764051, 0, (t_469764041.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_620758759(key_469764042);
    }
    

  return result_469764043;

}

function nimFloatToString_352321654(a_352321655) {
  var result_352321656 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_352321655))
      result_352321656 = a_352321655 === 0 && 1 / a_352321655 < 0 ? "-0.0" : a_352321655+".0"
    else {
      result_352321656 = a_352321655+""
      if(nimOnlyDigitsOrMinus(result_352321656)){
        result_352321656 = a_352321655+".0"
      }
    }
  

  return result_352321656;

}

function addFloat_33557372(result_33557374, result_33557374_Idx, x_33557375) {
    add_33556419(result_33557374, result_33557374_Idx, nimFloatToString_352321654(x_33557375));

  
}

function HEX24_33557368(x_33557370) {
  var result_33557371 = [[]];

    addFloat_33557372(result_33557371, 0, x_33557370);

  return result_33557371[0];

}

function parseSaturatedNatural_956301628(s_956301629, b_956301630, b_956301630_Idx, start_956301631) {
      var Temporary1;
          var Temporary4;

  var result_956301632 = 0;

    var i_956301633 = start_956301631;
    if (((i_956301633 < (s_956301629).length) && (s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)] == 43))) {
    i_956301633 = addInt(i_956301633, 1);
    }
    
      if (!(i_956301633 < (s_956301629).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)]] != undefined);      }    if (Temporary1) {
    b_956301630[b_956301630_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_956301633 < (s_956301629).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_956301652 = subInt(s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)], 48);
          if ((b_956301630[b_956301630_Idx] <= divInt(subInt(2147483647, c_956301652), 10))) {
          b_956301630[b_956301630_Idx] = addInt(mulInt(b_956301630[b_956301630_Idx], 10), c_956301652);
          }
          else {
            b_956301630[b_956301630_Idx] = 2147483647;
          }
          
          i_956301633 = addInt(i_956301633, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_956301633 < (s_956301629).length) && (s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)] == 95))) break Label6;
                i_956301633 = addInt(i_956301633, 1);
              }
          } while (false);
        }
    } while (false);
    result_956301632 = subInt(i_956301633, start_956301631);
    }
    

  return result_956301632;

}

function HEX5BHEX5D_1040190618(s_1040190621, x_1040190622) {
  var result_1040190623 = [];

    var a_1040190625 = x_1040190622.a;
    var L_1040190627 = addInt(subInt(subInt((s_1040190621).length, x_1040190622.b), a_1040190625), 1);
    result_1040190623 = nimCopy(null, mnewString(chckRange(L_1040190627, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_1040190632 = 0;
      var i_469764872 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764872 < L_1040190627)) break Label3;
            i_1040190632 = i_469764872;
            result_1040190623[chckIndx(i_1040190632, 0, (result_1040190623).length - 1)] = s_1040190621[chckIndx(addInt(i_1040190632, a_1040190625), 0, (s_1040190621).length - 1)];
            i_469764872 = addInt(i_469764872, 1);
          }
      } while (false);
    } while (false);

  return result_1040190623;

}

function HEX2EHEX2E_973078608(a_973078611, b_973078612) {
  var result_973078615 = ({a: 0, b: 0});

    result_973078615 = nimCopy(result_973078615, {a: a_973078611, b: b_973078612}, NTI973078607);

  return result_973078615;

}

function parseStandardFormatSpecifier_1107296314(s_1107296315, start_1107296316, ignoreUnknownSuffix_1107296317) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1107296318 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1107296318.fill = 32;
    result_1107296318.align = 0;
    result_1107296318.sign = 45;
    var i_1107296320 = start_1107296316;
    if (((addInt(i_1107296320, 1) < (s_1107296315).length) && (ConstSet2[s_1107296315[chckIndx(addInt(i_1107296320, 1), 0, (s_1107296315).length - 1)]] != undefined))) {
    result_1107296318.fill = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    result_1107296318.align = s_1107296315[chckIndx(addInt(i_1107296320, 1), 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 2);
    }
    else {
    if (((i_1107296320 < (s_1107296315).length) && (ConstSet3[s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)]] != undefined))) {
    result_1107296318.align = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 1);
    }
    }
    if (((i_1107296320 < (s_1107296315).length) && (ConstSet4[s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)]] != undefined))) {
    result_1107296318.sign = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
    if (((i_1107296320 < (s_1107296315).length) && (s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)] == 35))) {
    result_1107296318.alternateForm = true;
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
      if (!((addInt(i_1107296320, 1) < (s_1107296315).length) && (s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_1107296315[chckIndx(addInt(i_1107296320, 1), 0, (s_1107296315).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1107296318.padWithZero = true;
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
    var parsedLength_1107296357 = parseSaturatedNatural_956301628(s_1107296315, result_1107296318, "minimumWidth", i_1107296320);
    i_1107296320 = addInt(i_1107296320, parsedLength_1107296357);
    if (((i_1107296320 < (s_1107296315).length) && (s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)] == 46))) {
    i_1107296320 = addInt(i_1107296320, 1);
    var parsedLengthB_1107296366 = parseSaturatedNatural_956301628(s_1107296315, result_1107296318, "precision", i_1107296320);
    i_1107296320 = addInt(i_1107296320, parsedLengthB_1107296366);
    }
    else {
      result_1107296318.precision = -1;
    }
    
      if (!(i_1107296320 < (s_1107296315).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1107296318.typ = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
    result_1107296318.endPosition = i_1107296320;
      if (!!((i_1107296320 == (s_1107296315).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1107296317);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_1040190618(s_1107296315, HEX2EHEX2E_973078608(i_1107296320, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1107296318;

}

function nsuformatBiggestFloat(f_939526009, format_939526010, precision_939526011, decimalSep_939526012) {
  var result_939526013 = [];

    var precision_939526014 = precision_939526011;
    if ((precision_939526014 == -1)) {
    precision_939526014 = 6;
    }
    
    var res_939526015 = null;
    switch (format_939526010) {
    case 0:
      res_939526015 = f_939526009.toString();
      break;
    case 1:
      res_939526015 = f_939526009.toFixed(precision_939526014);
      break;
    case 2:
      res_939526015 = f_939526009.toExponential(precision_939526014);
      break;
    }
    result_939526013 = nimCopy(null, cstrToNimstr(res_939526015), NTI33554439);
    if (((1.0 / f_939526009) == -Infinity)) {
    result_939526013 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_939526015) || []), NTI33554439);
    }
    
    Label1: do {
      var i_939526020 = 0;
      var colontmp__469764875 = 0;
      colontmp__469764875 = (result_939526013).length;
      var i_469764876 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764876 < colontmp__469764875)) break Label3;
            i_939526020 = i_469764876;
            if ((ConstSet9[result_939526013[chckIndx(i_939526020, 0, (result_939526013).length - 1)]] != undefined)) {
            result_939526013[chckIndx(i_939526020, 0, (result_939526013).length - 1)] = decimalSep_939526012;
            }
            
            i_469764876 = addInt(i_469764876, 1);
          }
      } while (false);
    } while (false);

  return result_939526013;

}

function insert_33557846(x_33557847, x_33557847_Idx, item_33557848, i_33557849) {
    var xl_33557850 = (x_33557847[x_33557847_Idx]).length;
    (x_33557847[x_33557847_Idx].length = chckRange(addInt(xl_33557850, (item_33557848).length), 0, 2147483647));
    var j_33557851 = subInt(xl_33557850, 1);
    Label1: do {
        Label2: while (true) {
        if (!(i_33557849 <= j_33557851)) break Label2;
          x_33557847[x_33557847_Idx][chckIndx(addInt(j_33557851, (item_33557848).length), 0, (x_33557847[x_33557847_Idx]).length - 1)] = x_33557847[x_33557847_Idx][chckIndx(j_33557851, 0, (x_33557847[x_33557847_Idx]).length - 1)];
          j_33557851 = subInt(j_33557851, 1);
        }
    } while (false);
    j_33557851 = 0;
    Label3: do {
        Label4: while (true) {
        if (!(j_33557851 < (item_33557848).length)) break Label4;
          x_33557847[x_33557847_Idx][chckIndx(addInt(j_33557851, i_33557849), 0, (x_33557847[x_33557847_Idx]).length - 1)] = item_33557848[chckIndx(j_33557851, 0, (item_33557848).length - 1)];
          j_33557851 = addInt(j_33557851, 1);
        }
    } while (false);

  
}

function nsuRepeatChar(c_939525115, count_939525116) {
  var result_939525117 = [];

    result_939525117 = nimCopy(null, mnewString(count_939525116), NTI33554439);
    Label1: do {
      var i_939525122 = 0;
      var colontmp__469764881 = 0;
      colontmp__469764881 = subInt(count_939525116, 1);
      var res_469764882 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764882 <= colontmp__469764881)) break Label3;
            i_939525122 = res_469764882;
            result_939525117[chckIndx(i_939525122, 0, (result_939525117).length - 1)] = c_939525115;
            res_469764882 = addInt(res_469764882, 1);
          }
      } while (false);
    } while (false);

  return result_939525117;

}

function validateUtf8_1040187669(s_1040187670) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_1040187671 = 0;

  BeforeRet: do {
    var i_1040187672 = 0;
    var L_1040187673 = (s_1040187670).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_1040187672 < L_1040187673)) break Label2;
          if ((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] <= 127)) {
          i_1040187672 = addInt(i_1040187672, 1);
          }
          else {
          if (((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] >>> 5) == 6)) {
          if ((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] < 194)) {
          result_1040187671 = i_1040187672;
          break BeforeRet;
          }
          
            if (!(addInt(i_1040187672, 1) < L_1040187673)) Temporary3 = false; else {              Temporary3 = ((s_1040187670[chckIndx(addInt(i_1040187672, 1), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_1040187672 = addInt(i_1040187672, 2);
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_1040187672, 2) < L_1040187673)) Temporary5 = false; else {              Temporary5 = ((s_1040187670[chckIndx(addInt(i_1040187672, 1), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_1040187670[chckIndx(addInt(i_1040187672, 2), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          i_1040187672 = addInt(i_1040187672, 3);
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_1040187672, 3) < L_1040187673)) Temporary8 = false; else {              Temporary8 = ((s_1040187670[chckIndx(addInt(i_1040187672, 1), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_1040187670[chckIndx(addInt(i_1040187672, 2), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_1040187670[chckIndx(addInt(i_1040187672, 3), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          i_1040187672 = addInt(i_1040187672, 4);
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_1040187671 = -1;
    break BeforeRet;
  } while (false);

  return result_1040187671;

}

function nucruneLen(s_1040187402) {
  var result_1040187403 = 0;

    result_1040187403 = 0;
    var i_1040187404 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1040187404 < (s_1040187402).length)) break Label2;
          if ((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] <= 127)) {
          i_1040187404 = addInt(i_1040187404, 1);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 5) == 6)) {
          i_1040187404 = addInt(i_1040187404, 2);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 4) == 14)) {
          i_1040187404 = addInt(i_1040187404, 3);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 3) == 30)) {
          i_1040187404 = addInt(i_1040187404, 4);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 2) == 62)) {
          i_1040187404 = addInt(i_1040187404, 5);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 1) == 126)) {
          i_1040187404 = addInt(i_1040187404, 6);
          }
          else {
          i_1040187404 = addInt(i_1040187404, 1);
          }
          }}}}}
          result_1040187403 = addInt(result_1040187403, 1);
        }
    } while (false);

  return result_1040187403;

}

function alignString_1107296276(s_1107296277, minimumWidth_1107296278, align_1107296279, fill_1107296280) {
      var Temporary1;

  var result_1107296281 = [];

    if ((minimumWidth_1107296278 == 0)) {
    result_1107296281 = nimCopy(null, s_1107296277, NTI33554439);
    }
    else {
      if ((validateUtf8_1040187669(s_1107296277) == -1)) {
      Temporary1 = nucruneLen(s_1107296277);
      }
      else {
      Temporary1 = (s_1107296277).length;
      }
      
      var sRuneLen_1107296282 = Temporary1;
      var toFill_1107296283 = subInt(minimumWidth_1107296278, sRuneLen_1107296282);
      if ((toFill_1107296283 <= 0)) {
      result_1107296281 = nimCopy(null, s_1107296277, NTI33554439);
      }
      else {
      if (((align_1107296279 == 60) || (align_1107296279 == 0))) {
      result_1107296281 = nimCopy(null, (s_1107296277 || []).concat(nsuRepeatChar(fill_1107296280, chckRange(toFill_1107296283, 0, 2147483647)) || []), NTI33554439);
      }
      else {
      if ((align_1107296279 == 94)) {
      var half_1107296284 = divInt(toFill_1107296283, 2);
      result_1107296281 = nimCopy(null, (nsuRepeatChar(fill_1107296280, chckRange(half_1107296284, 0, 2147483647)) || []).concat(s_1107296277 || [],nsuRepeatChar(fill_1107296280, chckRange(subInt(toFill_1107296283, half_1107296284), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        result_1107296281 = nimCopy(null, (nsuRepeatChar(fill_1107296280, chckRange(toFill_1107296283, 0, 2147483647)) || []).concat(s_1107296277 || []), NTI33554439);
      }
      }}
    }
    

  return result_1107296281;

}

function nsuToUpperAsciiChar(c_939524183) {
  var result_939524184 = 0;

    if ((ConstSet11[c_939524183] != undefined)) {
    result_939524184 = (c_939524183 ^ 32);
    }
    else {
      result_939524184 = c_939524183;
    }
    

  return result_939524184;

}

function nsuToUpperAsciiStr(s_939524190) {
  var result_939524191 = [];

    result_939524191 = nimCopy(null, mnewString(chckRange((s_939524190).length, 0, 2147483647)), NTI33554439);
    Label1: do {
      var iHEX60gensym11_939524197 = 0;
      var colontmp__469764887 = 0;
      colontmp__469764887 = subInt((s_939524190).length, 1);
      var res_469764888 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764888 <= colontmp__469764887)) break Label3;
            iHEX60gensym11_939524197 = res_469764888;
            result_939524191[chckIndx(iHEX60gensym11_939524197, 0, (result_939524191).length - 1)] = nsuToUpperAsciiChar(s_939524190[chckIndx(iHEX60gensym11_939524197, 0, (s_939524190).length - 1)]);
            res_469764888 = addInt(res_469764888, 1);
          }
      } while (false);
    } while (false);

  return result_939524191;

}

function formatValue_469764418(result_469764420, result_469764420_Idx, value_469764421, specifier_469764422) {
    var Temporary1;

  BeforeRet: do {
    if (((specifier_469764422).length == 0)) {
    result_469764420[result_469764420_Idx].push.apply(result_469764420[result_469764420_Idx], HEX24_33557368(value_469764421));;
    break BeforeRet;
    }
    
    var spec_469764426 = parseStandardFormatSpecifier_1107296314(specifier_469764422, 0, false);
    var fmode_469764427 = 0;
    switch (spec_469764426.typ) {
    case 101:
    case 69:
      fmode_469764427 = 2;
      break;
    case 102:
    case 70:
      fmode_469764427 = 1;
      break;
    case 103:
    case 71:
      fmode_469764427 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_469764426.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_469764429 = [nsuformatBiggestFloat(value_469764421, fmode_469764427, chckRange(spec_469764426.precision, -1, 32), 46)];
    var sign_469764430 = false;
    if ((0.0 <= value_469764421)) {
    if (!((spec_469764426.sign == 45))) {
    sign_469764430 = true;
    if ((value_469764421 == 0.0)) {
    if (((1.0 / value_469764421) == Infinity)) {
    insert_33557846(f_469764429, 0, nimCharToStr(spec_469764426.sign), 0);
    }
    
    }
    else {
    insert_33557846(f_469764429, 0, nimCharToStr(spec_469764426.sign), 0);
    }
    
    }
    
    }
    else {
      sign_469764430 = true;
    }
    
    if (spec_469764426.padWithZero) {
    var signStr_469764431 = [];
    if (sign_469764430) {
    signStr_469764431 = nimCopy(null, nimCharToStr(f_469764429[0][chckIndx(0, 0, (f_469764429[0]).length - 1)]), NTI33554439);
    f_469764429[0] = nimCopy(null, HEX5BHEX5D_1040190618(f_469764429[0], HEX2EHEX2E_973078608(1, 1)), NTI33554439);
    }
    
    var toFill_469764453 = subInt(subInt(spec_469764426.minimumWidth, (f_469764429[0]).length), (sign_469764430 ? 1 : 0));
    if ((0 < toFill_469764453)) {
    f_469764429[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_469764453, 0, 2147483647)) || []).concat(f_469764429[0] || []), NTI33554439);
    }
    
    if (sign_469764430) {
    f_469764429[0] = nimCopy(null, (signStr_469764431 || []).concat(f_469764429[0] || []), NTI33554439);
    }
    
    }
    
    if ((spec_469764426.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_469764426.align;
    }
    
    var align_469764454 = Temporary1;
    var res_469764455 = alignString_1107296276(f_469764429[0], spec_469764426.minimumWidth, align_469764454, spec_469764426.fill);
    if ((ConstSet10[spec_469764426.typ] != undefined)) {
    result_469764420[result_469764420_Idx].push.apply(result_469764420[result_469764420_Idx], nsuToUpperAsciiStr(res_469764455));;
    }
    else {
    result_469764420[result_469764420_Idx].push.apply(result_469764420[result_469764420_Idx], res_469764455);;
    }
    
  } while (false);

  
}

function HEX2DHEX3D_469764580(x_469764582, x_469764582_Idx, y_469764583) {
    x_469764582[x_469764582_Idx] = (x_469764582[x_469764582_Idx] - y_469764583);

  
}

function round_469764576(x_469764578) {
  var result_469764579 = [0.0];

    if ((0.0 <= x_469764578)) {
    result_469764579[0] = Math.round(x_469764578);
    }
    else {
      result_469764579[0] = Math.ceil(x_469764578);
      if ((0.5 <= (result_469764579[0] - x_469764578))) {
      HEX2DHEX3D_469764580(result_469764579, 0, 1.0);
      }
      
    }
    

  return result_469764579[0];

}

function round_469764571(x_469764573, places_469764574) {
  var result_469764575 = 0.0;

    if ((places_469764574 == 0)) {
    result_469764575 = round_469764576(x_469764573);
    }
    else {
      var mult_469764584 = Math.pow(10.0, places_469764574);
      result_469764575 = (round_469764576((x_469764573 * mult_469764584)) / mult_469764584);
    }
    

  return result_469764575;

}

function runeLenAt_1040187457(s_1040187458, i_1040187459) {
  var result_1040187460 = 0;

    if ((s_1040187458[chckIndx(i_1040187459, 0, (s_1040187458).length - 1)] <= 127)) {
    result_1040187460 = 1;
    }
    else {
    if (((s_1040187458[chckIndx(i_1040187459, 0, (s_1040187458).length - 1)] >>> 5) == 6)) {
    result_1040187460 = 2;
    }
    else {
    if (((s_1040187458[chckIndx(i_1040187459, 0, (s_1040187458).length - 1)] >>> 4) == 14)) {
    result_1040187460 = 3;
    }
    else {
    if (((s_1040187458[chckIndx(i_1040187459, 0, (s_1040187458).length - 1)] >>> 3) == 30)) {
    result_1040187460 = 4;
    }
    else {
    if (((s_1040187458[chckIndx(i_1040187459, 0, (s_1040187458).length - 1)] >>> 2) == 62)) {
    result_1040187460 = 5;
    }
    else {
    if (((s_1040187458[chckIndx(i_1040187459, 0, (s_1040187458).length - 1)] >>> 1) == 126)) {
    result_1040187460 = 6;
    }
    else {
      result_1040187460 = 1;
    }
    }}}}}

  return result_1040187460;

}

function runeOffset_1040188029(s_1040188030, pos_1040188031, start_1040188032) {
  var result_1040188033 = 0;

  BeforeRet: do {
    var i_1040188034 = 0;
    var o_1040188035 = start_1040188032;
    Label1: do {
        Label2: while (true) {
        if (!(i_1040188034 < pos_1040188031)) break Label2;
          o_1040188035 = addInt(o_1040188035, chckRange(runeLenAt_1040187457(s_1040188030, o_1040188035), 0, 2147483647));
          if (((s_1040188030).length <= o_1040188035)) {
          result_1040188033 = -1;
          break BeforeRet;
          }
          
          i_1040188034 = addInt(i_1040188034, 1);
        }
    } while (false);
    result_1040188033 = o_1040188035;
    break BeforeRet;
  } while (false);

  return result_1040188033;

}

function formatValue_1107296418(result_1107296419, result_1107296419_Idx, value_1107296420, specifier_1107296421) {
    var spec_1107296422 = parseStandardFormatSpecifier_1107296314(specifier_1107296421, 0, false);
    var value_1107296423 = nimCopy(null, value_1107296420, NTI33554439);
    switch (spec_1107296422.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_1107296422.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1107296422.precision == -1))) {
    if ((spec_1107296422.precision < nucruneLen(value_1107296423))) {
    (value_1107296423.length = chckRange(runeOffset_1040188029(value_1107296423, chckRange(spec_1107296422.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_1107296419[result_1107296419_Idx].push.apply(result_1107296419[result_1107296419_Idx], alignString_1107296276(value_1107296423, spec_1107296422.minimumWidth, spec_1107296422.align, spec_1107296422.fill));;

  
}

function mkDigit_1107296261(v_1107296262, typ_1107296263) {
      var Temporary1;

  var result_1107296264 = [];

    if (!((v_1107296262 < 26))) {
    failedAssertImpl_218103864(makeNimstrLit("strformat.nim(320, 9) `v < 26` "));
    }
    
    if ((v_1107296262 < 10)) {
    result_1107296264 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1107296262), 0, 255)), NTI33554439);
    }
    else {
      if ((typ_1107296263 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1107296264 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1107296262), 10), 0, 255)), NTI33554439);
    }
    

  return result_1107296264;

}

function formatInt_469764384(n_469764386, radix_469764387, spec_469764388) {
    var Temporary1;
    var Temporary8;

  var result_469764389 = [];

    var n_469764392 = n_469764386;
    var negative_469764393 = (n_469764392 < 0);
    if (negative_469764393) {
    Temporary1 = ((~(n_469764392) + 1) );
    }
    else {
    Temporary1 = n_469764392;
    }
    
    var v_469764394 = Temporary1;
    var xx_469764395 = [];
    if (spec_469764388.alternateForm) {
    switch (spec_469764388.typ) {
    case 88:
      xx_469764395 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 120:
      xx_469764395 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 98:
      xx_469764395 = nimCopy(null, makeNimstrLit("0b"), NTI33554439);
      break;
    case 111:
      xx_469764395 = nimCopy(null, makeNimstrLit("0o"), NTI33554439);
      break;
    default: 
      break;
    }
    }
    
    if ((v_469764394 == 0)) {
    result_469764389 = nimCopy(null, makeNimstrLit("0"), NTI33554439);
    }
    else {
      result_469764389 = nimCopy(null, [], NTI33554439);
      Label2: do {
          Label3: while (true) {
          if (!(0 < v_469764394)) break Label3;
            var d_469764396 = (v_469764394 % radix_469764387);
            v_469764394 = Math.trunc(((v_469764394 / radix_469764387) ));
            result_469764389.push.apply(result_469764389, mkDigit_1107296261(chckRange(d_469764396, -2147483648, 2147483647), spec_469764388.typ));;
          }
      } while (false);
      Label4: do {
        var idx_469764401 = 0;
        var colontmp__469764893 = 0;
        colontmp__469764893 = divInt((result_469764389).length, 2);
        var i_469764894 = 0;
        Label5: do {
            Label6: while (true) {
            if (!(i_469764894 < colontmp__469764893)) break Label6;
              idx_469764401 = i_469764894;
              var Temporary7 = result_469764389[chckIndx(idx_469764401, 0, (result_469764389).length - 1)]; result_469764389[chckIndx(idx_469764401, 0, (result_469764389).length - 1)] = result_469764389[chckIndx(subInt(subInt((result_469764389).length, idx_469764401), 1), 0, (result_469764389).length - 1)]; result_469764389[chckIndx(subInt(subInt((result_469764389).length, idx_469764401), 1), 0, (result_469764389).length - 1)] = Temporary7;              i_469764894 = addInt(i_469764894, 1);
            }
        } while (false);
      } while (false);
    }
    
    if (spec_469764388.padWithZero) {
    if (negative_469764393) Temporary8 = true; else {      Temporary8 = !((spec_469764388.sign == 45));    }    var sign_469764406 = Temporary8;
    var toFill_469764410 = subInt(subInt(subInt(spec_469764388.minimumWidth, (result_469764389).length), (xx_469764395).length), (sign_469764406 ? 1 : 0));
    if ((0 < toFill_469764410)) {
    result_469764389 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_469764410, 0, 2147483647)) || []).concat(result_469764389 || []), NTI33554439);
    }
    
    }
    
    if (negative_469764393) {
    result_469764389 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_469764395 || [],result_469764389 || []), NTI33554439);
    }
    else {
    if (!((spec_469764388.sign == 45))) {
    result_469764389 = nimCopy(null, [spec_469764388.sign].concat(xx_469764395 || [],result_469764389 || []), NTI33554439);
    }
    else {
      result_469764389 = nimCopy(null, (xx_469764395 || []).concat(result_469764389 || []), NTI33554439);
    }
    }
    if ((spec_469764388.align == 60)) {
    Label9: do {
      var i_469764415 = 0;
      var colontmp__469764897 = 0;
      colontmp__469764897 = (result_469764389).length;
      var i_469764898 = colontmp__469764897;
      Label10: do {
          Label11: while (true) {
          if (!(i_469764898 < spec_469764388.minimumWidth)) break Label11;
            i_469764415 = i_469764898;
            addChar(result_469764389, spec_469764388.fill);;
            i_469764898 = addInt(i_469764898, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      var toFill_469764416 = subInt(spec_469764388.minimumWidth, (result_469764389).length);
      if ((spec_469764388.align == 94)) {
      var half_469764417 = divInt(toFill_469764416, 2);
      result_469764389 = nimCopy(null, (nsuRepeatChar(spec_469764388.fill, chckRange(half_469764417, 0, 2147483647)) || []).concat(result_469764389 || [],nsuRepeatChar(spec_469764388.fill, chckRange(subInt(toFill_469764416, half_469764417), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        if ((0 < toFill_469764416)) {
        result_469764389 = nimCopy(null, (nsuRepeatChar(spec_469764388.fill, chckRange(toFill_469764416, 0, 2147483647)) || []).concat(result_469764389 || []), NTI33554439);
        }
        
      }
      
    }
    

  return result_469764389;

}

function formatValue_469764376(result_469764378, result_469764378_Idx, value_469764379, specifier_469764380) {
  BeforeRet: do {
    if (((specifier_469764380).length == 0)) {
    result_469764378[result_469764378_Idx].push.apply(result_469764378[result_469764378_Idx], HEX24_335544323(value_469764379));;
    break BeforeRet;
    }
    
    var spec_469764381 = parseStandardFormatSpecifier_1107296314(specifier_469764380, 0, false);
    var radix_469764382 = 10;
    switch (spec_469764381.typ) {
    case 120:
    case 88:
      radix_469764382 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_469764382 = 2;
      break;
    case 111:
      radix_469764382 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_469764381.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_469764378[result_469764378_Idx].push.apply(result_469764378[result_469764378_Idx], formatInt_469764384(value_469764379, radix_469764382, spec_469764381));;
  } while (false);

  
}

function integerOutOfRangeError_956301560() {
    raiseException({message: makeNimstrLit("Parsed integer outside of valid range"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_956301562(s_956301563, b_956301564, b_956301564_Idx, start_956301565) {
      var Temporary1;
          var Temporary4;
      var Temporary7;

  var result_956301566 = 0;

    var sign_956301567 = -1;
    var i_956301568 = start_956301565;
    if ((i_956301568 < (s_956301563).length)) {
    if ((s_956301563[chckIndx(i_956301568, 0, (s_956301563).length - 1)] == 43)) {
    i_956301568 += 1;
    }
    else {
    if ((s_956301563[chckIndx(i_956301568, 0, (s_956301563).length - 1)] == 45)) {
    i_956301568 += 1;
    sign_956301567 = 1;
    }
    }
    }
    
      if (!(i_956301568 < (s_956301563).length)) Temporary1 = false; else {        Temporary1 = (ConstSet12[s_956301563[chckIndx(i_956301568, 0, (s_956301563).length - 1)]] != undefined);      }    if (Temporary1) {
    b_956301564[b_956301564_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_956301568 < (s_956301563).length)) Temporary4 = false; else {            Temporary4 = (ConstSet13[s_956301563[chckIndx(i_956301568, 0, (s_956301563).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_956301591 = (s_956301563[chckIndx(i_956301568, 0, (s_956301563).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_956301591) / 10) <= b_956301564[b_956301564_Idx])) {
          b_956301564[b_956301564_Idx] = ((b_956301564[b_956301564_Idx] * 10) - c_956301591);
          }
          else {
          integerOutOfRangeError_956301560();
          }
          
          i_956301568 += 1;
          Label5: do {
              Label6: while (true) {
              if (!((i_956301568 < (s_956301563).length) && (s_956301563[chckIndx(i_956301568, 0, (s_956301563).length - 1)] == 95))) break Label6;
                i_956301568 += 1;
              }
          } while (false);
        }
    } while (false);
      if (!(sign_956301567 == -1)) Temporary7 = false; else {        Temporary7 = (b_956301564[b_956301564_Idx] == -9223372036854775808);      }    if (Temporary7) {
    integerOutOfRangeError_956301560();
    }
    else {
      b_956301564[b_956301564_Idx] = (b_956301564[b_956301564_Idx] * sign_956301567);
      result_956301566 = (i_956301568 - start_956301565);
    }
    
    }
    

  return result_956301566;

}

function npuParseBiggestInt(s_956301609, number_956301610, number_956301610_Idx, start_956301611) {
  var result_956301612 = 0;

    var res_956301613 = [0];
    result_956301612 = rawParseInt_956301562(s_956301609, res_956301613, 0, start_956301611);
    if (!((result_956301612 == 0))) {
    number_956301610[number_956301610_Idx] = res_956301613[0];
    }
    

  return result_956301612;

}

function npuParseInt(s_956301615, number_956301616, number_956301616_Idx, start_956301617) {
      var Temporary1;

  var result_956301618 = 0;

    var res_956301619 = [0];
    result_956301618 = npuParseBiggestInt(s_956301615, res_956301619, 0, start_956301617);
      if ((res_956301619[0] < -2147483648)) Temporary1 = true; else {        Temporary1 = (2147483647 < res_956301619[0]);      }    if (Temporary1) {
    integerOutOfRangeError_956301560();
    }
    
    if (!((result_956301618 == 0))) {
    number_956301616[number_956301616_Idx] = chckRange(res_956301619[0], -2147483648, 2147483647);
    }
    

  return result_956301618;

}

function nsuParseInt(s_939524894) {
      var Temporary1;

  var result_939524895 = [0];

    result_939524895[0] = 0;
    var L_939524896 = npuParseInt(s_939524894, result_939524895, 0, 0);
      if (!((L_939524896 == (s_939524894).length))) Temporary1 = true; else {        Temporary1 = (L_939524896 == 0);      }    if (Temporary1) {
    raiseException({message: (makeNimstrLit("invalid integer: ") || []).concat(s_939524894 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_939524895[0];

}

function main_469763505() {
            var Temporary4;
              var Temporary5;
            var Temporary6;
              
function ifValid_469763550(name_469763551, grade_469763552) {
                var result_469763553 = false;

                BeforeRet: do {
                  result_469763553 = ((!(contains_939525784(name_469763551, makeNimstrLit("Physical Ed"))) && !(contains_939525784(name_469763551, makeNimstrLit("Health")))) && contains_973078571(gradeLetters_469762074, grade_469763552));
                  break BeforeRet;
                } while (false);

                return result_469763553;

              }

function calculateGpaNum_469763758(ccourses_469763759, cgrades_469763760) {
  var result_469763761 = {Field0: 0.0, Field1: 0.0};

  BeforeRet: do {
    var credits_469763769 = newSeq_469763528(0);
    var total_credits_469763770 = [0.0];
    var qualityPoints_469763771 = [0.0];
    var unweightedgpas_469763779 = newSeq_469763528(0);
    var unweightedgpa_469763780 = 0.0;
    var unweightedQualityPoints_469763781 = [0.0];
    Label1: do {
      var course_469763802 = [];
      var i_469764802 = 0;
      var L_469764803 = (ccourses_469763759).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764802 < L_469764803)) break Label3;
            course_469763802 = ccourses_469763759[chckIndx(i_469764802, 0, (ccourses_469763759).length - 1)];
            if (contains_973078571(halfYear_469763466, course_469763802)) {
            credits_469763769.push(2.5);;
            HEX2BHEX3D_939526192(total_credits_469763770, 0, 2.5);
            }
            else {
            if (contains_973078571(labs_469763467, course_469763802)) {
            credits_469763769.push(6.0);;
            HEX2BHEX3D_939526192(total_credits_469763770, 0, 6.0);
            }
            else {
            if (contains_973078571(semester_469763468, course_469763802)) {
            credits_469763769.push(3.0);;
            HEX2BHEX3D_939526192(total_credits_469763770, 0, 3.0);
            }
            else {
              credits_469763769.push(5.0);;
              HEX2BHEX3D_939526192(total_credits_469763770, 0, 5.0);
            }
            }}
            i_469764802 = addInt(i_469764802, 1);
            if (!(((ccourses_469763759).length == L_469764803))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    gpas_469763545 = nimCopy(null, [], NTI469763177);
    Label4: do {
      var i_469763984 = 0;
      var colontmp__469764806 = 0;
      colontmp__469764806 = subInt((ccourses_469763759).length, 1);
      var res_469764807 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_469764807 <= colontmp__469764806)) break Label6;
            i_469763984 = res_469764807;
            if (contains_939525784(ccourses_469763759[chckIndx(i_469763984, 0, (ccourses_469763759).length - 1)], makeNimstrLit("AP"))) {
            gpas_469763545.push(HEX5BHEX5D_469764038(gpaAp_469763465, cgrades_469763760[chckIndx(i_469763984, 0, (cgrades_469763760).length - 1)]));;
            }
            else {
            if (contains_939525784(ccourses_469763759[chckIndx(i_469763984, 0, (ccourses_469763759).length - 1)], makeNimstrLit("Honors"))) {
            gpas_469763545.push(HEX5BHEX5D_469764038(gpaHonors_469763460, cgrades_469763760[chckIndx(i_469763984, 0, (cgrades_469763760).length - 1)]));;
            }
            else {
            gpas_469763545.push(HEX5BHEX5D_469764038(gpaRegular_469763455, cgrades_469763760[chckIndx(i_469763984, 0, (cgrades_469763760).length - 1)]));;
            }
            }
            res_469764807 = addInt(res_469764807, 1);
          }
      } while (false);
    } while (false);
    Label7: do {
      var i_469764243 = 0;
      var colontmp__469764810 = 0;
      colontmp__469764810 = subInt((ccourses_469763759).length, 1);
      var res_469764811 = 0;
      Label8: do {
          Label9: while (true) {
          if (!(res_469764811 <= colontmp__469764810)) break Label9;
            i_469764243 = res_469764811;
            HEX2BHEX3D_939526192(qualityPoints_469763771, 0, (gpas_469763545[chckIndx(i_469764243, 0, (gpas_469763545).length - 1)] * credits_469763769[chckIndx(i_469764243, 0, (credits_469763769).length - 1)]));
            res_469764811 = addInt(res_469764811, 1);
          }
      } while (false);
    } while (false);
    var gpa_469764248 = (qualityPoints_469763771[0] / total_credits_469763770[0]);
    Label10: do {
      var i_469764256 = 0;
      var colontmp__469764814 = 0;
      colontmp__469764814 = subInt((cgrades_469763760).length, 1);
      var res_469764815 = 0;
      Label11: do {
          Label12: while (true) {
          if (!(res_469764815 <= colontmp__469764814)) break Label12;
            i_469764256 = res_469764815;
            unweightedgpas_469763779.push(HEX5BHEX5D_469764038(gpaRegular_469763455, cgrades_469763760[chckIndx(i_469764256, 0, (cgrades_469763760).length - 1)]));;
            res_469764815 = addInt(res_469764815, 1);
          }
      } while (false);
    } while (false);
    Label13: do {
      var i_469764326 = 0;
      var colontmp__469764818 = 0;
      colontmp__469764818 = subInt((cgrades_469763760).length, 1);
      var res_469764819 = 0;
      Label14: do {
          Label15: while (true) {
          if (!(res_469764819 <= colontmp__469764818)) break Label15;
            i_469764326 = res_469764819;
            HEX2BHEX3D_939526192(unweightedQualityPoints_469763781, 0, (unweightedgpas_469763779[chckIndx(i_469764326, 0, (unweightedgpas_469763779).length - 1)] * credits_469763769[chckIndx(i_469764326, 0, (credits_469763769).length - 1)]));
            res_469764819 = addInt(res_469764819, 1);
          }
      } while (false);
    } while (false);
    unweightedgpa_469763780 = (unweightedQualityPoints_469763781[0] / total_credits_469763770[0]);
    var colontmp__469764821 = gpa_469764248;
    var colontmp__469764822 = unweightedgpa_469763780;
    result_469763761 = nimCopy(result_469763761, {Field0: colontmp__469764821, Field1: colontmp__469764822}, NTI469763038);
    break BeforeRet;
  } while (false);

  return result_469763761;

}

function raiseLetterGrade_469763600(letterGrade_469763601) {
  var result_469763602 = [];

  BeforeRet: do {
    Label1: do {
      var i_469763655 = 0;
      var res_469764902 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764902 <= 12)) break Label3;
            i_469763655 = res_469764902;
            if (eqStrings(gradeLetters_469762074[chckIndx(i_469763655, 0, (gradeLetters_469762074).length - 1)], letterGrade_469763601)) {
            if ((i_469763655 <= 0)) {
            result_469763602 = nimCopy(null, makeNimstrLit("A+"), NTI33554439);
            break BeforeRet;
            }
            
            result_469763602 = nimCopy(null, gradeLetters_469762074[chckIndx(subInt(i_469763655, 1), 0, (gradeLetters_469762074).length - 1)], NTI33554439);
            break BeforeRet;
            }
            
            res_469764902 = addInt(res_469764902, 1);
          }
      } while (false);
    } while (false);
    result_469763602 = nimCopy(null, makeNimstrLit("A+"), NTI33554439);
    break BeforeRet;
  } while (false);

  return result_469763602;

}

function lowerLetterGrade_469763656(letterGrade_469763657) {
  var result_469763658 = [];

  BeforeRet: do {
    Label1: do {
      var i_469763710 = 0;
      var res_469764905 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764905 <= 12)) break Label3;
            i_469763710 = res_469764905;
            if (eqStrings(gradeLetters_469762074[chckIndx(i_469763710, 0, (gradeLetters_469762074).length - 1)], letterGrade_469763657)) {
            if ((12 <= i_469763710)) {
            result_469763658 = nimCopy(null, makeNimstrLit("F"), NTI33554439);
            break BeforeRet;
            }
            
            result_469763658 = nimCopy(null, gradeLetters_469762074[chckIndx(addInt(i_469763710, 1), 0, (gradeLetters_469762074).length - 1)], NTI33554439);
            break BeforeRet;
            }
            
            res_469764905 = addInt(res_469764905, 1);
          }
      } while (false);
    } while (false);
    result_469763658 = nimCopy(null, makeNimstrLit("F"), NTI33554439);
    break BeforeRet;
  } while (false);

  return result_469763658;

}

function reCalcGpa_469764340(current_469764341, direction_469764342) {
  var result_469764343 = {Field0: 0.0, Field1: 0.0};

  BeforeRet: do {
    if (eqStrings(direction_469764342, makeNimstrLit("up"))) {
    grades_469763515[chckIndx(current_469764341, 0, (grades_469763515).length - 1)] = nimCopy(null, raiseLetterGrade_469763600(grades_469763515[chckIndx(current_469764341, 0, (grades_469763515).length - 1)]), NTI33554439);
    }
    else {
    if (eqStrings(direction_469764342, makeNimstrLit("down"))) {
    grades_469763515[chckIndx(current_469764341, 0, (grades_469763515).length - 1)] = nimCopy(null, lowerLetterGrade_469763656(grades_469763515[chckIndx(current_469764341, 0, (grades_469763515).length - 1)]), NTI33554439);
    }
    }
    result_469764343 = nimCopy(result_469764343, calculateGpaNum_469763758(courses_469763523, grades_469763515), NTI469763374);
    break BeforeRet;
  } while (false);

  return result_469764343;

}

function createTable_469764349() {
            
function HEX3Aanonymous_469764497(e_469764498) {
              BeforeRet: do {
                if (calculating_469763547) {
                break BeforeRet;
                }
                
                calculating_469763547 = true;
                if (!((document.querySelector("#gpa") == null))) {
                document.querySelector("#gpa").remove();
                }
                
                var loadingDOM_469764502 = prsr_469763549.parseFromString(loading_469763507, "text/html");
                document.querySelector("p[class='sectionTitle']").appendChild(loadingDOM_469764502.documentElement);
                var colontmp__469764900 = reCalcGpa_469764340(nsuParseInt(cstrToNimstr(e_469764498.target.id)), makeNimstrLit("up"));
                var gpa_469764503 = colontmp__469764900["Field0"];
                var unweightedgpa_469764504 = colontmp__469764900["Field1"];
                displayGpa_469764344(gpa_469764503, unweightedgpa_469764504);
                createTable_469764349();
              } while (false);

              
            }
            
function HEX3Aanonymous_469764527(e_469764528) {
              BeforeRet: do {
                if (calculating_469763547) {
                break BeforeRet;
                }
                
                calculating_469763547 = true;
                if (!((document.querySelector("#gpa") == null))) {
                document.querySelector("#gpa").remove();
                }
                
                var loadingDOM_469764532 = prsr_469763549.parseFromString(loading_469763507, "text/html");
                document.querySelector("p[class='sectionTitle']").appendChild(loadingDOM_469764532.documentElement);
                var colontmp__469764909 = reCalcGpa_469764340(nsuParseInt(cstrToNimstr(e_469764528.target.id)), makeNimstrLit("down"));
                var gpa_469764533 = colontmp__469764909["Field0"];
                var unweightedgpa_469764534 = colontmp__469764909["Field1"];
                displayGpa_469764344(gpa_469764533, unweightedgpa_469764534);
                createTable_469764349();
              } while (false);

              
            }

    if (!((document.querySelector("div[id='customTable']") == null))) {
    document.querySelector("div[id='customTable']").remove();
    }
    
    var table_469764353 = document.createElement("div");
    table_469764353.id = "customTable";
    table_469764353.style.display = "flex";
    table_469764353.style.flexDirection = "column";
    table_469764353.style.justifyContent = "center";
    table_469764353.style.width = "100%";
    Label1: do {
      var i_469764361 = 0;
      var colontmp__469764824 = 0;
      colontmp__469764824 = subInt((courses_469763523).length, 1);
      var res_469764825 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764825 <= colontmp__469764824)) break Label3;
            i_469764361 = res_469764825;
            var fmtRes_469764370 = [mnewString(0)];
            fmtRes_469764370[0].push.apply(fmtRes_469764370[0], makeNimstrLit("            <div style=\"display: flex; flex-direction: row; justify-content: space-between; align-items: center; width: 100%; padding: 10px; border-bottom: 1px solid #e0e0e0;\">\x0A                <div style=\"display: flex; flex-direction: row; justify-content: space-between; align-items: center; width: 100%;\">\x0A                <div style=\"display: flex; flex-direction: row; justify-content: center; align-items: flex-start; width: 100%;\">\x0A                    <p style=\"font-size: 16px; font-weight: 500; color: #000; margin: 10px; width: 80px;\">"));;
            formatValue_1107296418(fmtRes_469764370, 0, courses_469763523[chckIndx(i_469764361, 0, (courses_469763523).length - 1)], []);
            fmtRes_469764370[0].push.apply(fmtRes_469764370[0], makeNimstrLit("</p>\x0A                    <button id=\""));;
            formatValue_469764376(fmtRes_469764370, 0, i_469764361, []);
            fmtRes_469764370[0].push.apply(fmtRes_469764370[0], makeNimstrLit("\" class=\"upGpa hover:bg-green-200\" style=\"background-color: #1565c0; width: 30px; border: 1px solid #ffffff; border-radius: 5px; padding: 5px; color: #fff; font-size: 16px; font-weight: 500; cursor: pointer; margin: 10px;\">+</button>\x0A                    <p style=\"font-size: 16px; font-weight: 500; color: #000; margin: 10px; width: 80px;\">"));;
            formatValue_1107296418(fmtRes_469764370, 0, grades_469763515[chckIndx(i_469764361, 0, (grades_469763515).length - 1)], []);
            fmtRes_469764370[0].push.apply(fmtRes_469764370[0], makeNimstrLit(" | "));;
            formatValue_469764418(fmtRes_469764370, 0, gpas_469763545[chckIndx(i_469764361, 0, (gpas_469763545).length - 1)], []);
            fmtRes_469764370[0].push.apply(fmtRes_469764370[0], makeNimstrLit("</p>  \x0A                    <button id=\""));;
            formatValue_469764376(fmtRes_469764370, 0, i_469764361, []);
            fmtRes_469764370[0].push.apply(fmtRes_469764370[0], makeNimstrLit("\" class=\"downGpa hover:bg-green-200\" style=\"background-color: #1565c0; width: 30px; border: 1px solid #ffffff; border-radius: 5px; padding: 5px; color: #fff; font-size: 16px; font-weight: 500; cursor: pointer; margin: 10px;\">-</button>\x0A                </div>\x0A                </div>\x0A            </div>\x0A            "));;
            var selction_469764474 = nimCopy(null, fmtRes_469764370[0], NTI33554439);
            table_469764353.appendChild(prsr_469763549.parseFromString(toJSStr(selction_469764474), "text/html").documentElement);
            res_469764825 = addInt(res_469764825, 1);
          }
      } while (false);
    } while (false);
    document.querySelector("td[colspan='2']").appendChild(table_469764353);
    Label4: do {
      var i_469764496 = null;
      var colontmp__469764828 = [];
      colontmp__469764828 = document.querySelectorAll(".upGpa");
      var i_469764830 = 0;
      var L_469764831 = (colontmp__469764828).length;
      Label5: do {
          Label6: while (true) {
          if (!(i_469764830 < L_469764831)) break Label6;
            i_469764496 = colontmp__469764828[chckIndx(i_469764830, 0, (colontmp__469764828).length - 1)];
            i_469764496.onclick = HEX3Aanonymous_469764497;
            i_469764830 = addInt(i_469764830, 1);
            if (!(((colontmp__469764828).length == L_469764831))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label7: do {
      var i_469764526 = null;
      var colontmp__469764834 = [];
      colontmp__469764834 = document.querySelectorAll(".downGpa");
      var i_469764835 = 0;
      var L_469764836 = (colontmp__469764834).length;
      Label8: do {
          Label9: while (true) {
          if (!(i_469764835 < L_469764836)) break Label9;
            i_469764526 = colontmp__469764834[chckIndx(i_469764835, 0, (colontmp__469764834).length - 1)];
            i_469764526.onclick = HEX3Aanonymous_469764527;
            i_469764835 = addInt(i_469764835, 1);
            if (!(((colontmp__469764834).length == L_469764836))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  
}

function activateToggle_469764347(e_469764348) {
    if (toggle_469763546) {
    if (!((document.querySelector("table[class='list']") == null))) {
    document.querySelector("table[class='list']").remove();
    }
    
    createTable_469764349();
    toggle_469763546 = false;
    }
    else {
      if (!((document.querySelector("div[id='customTable']") == null))) {
      document.querySelector("div[id='customTable']").remove();
      }
      
      document.querySelector("td[colspan='2']").appendChild(ogTable_469763548);
      toggle_469763546 = true;
    }
    

  
}

function displayGpa_469764344(gpa_469764345, unweightedgpa_469764346) {
    
function doAnimate_469764565() {
        
function innerHEX60gensym35_469764620() {
          var result_469764621 = null;

          BeforeRet: do {
            var a_469764622 = null;
            a_469764622 = {};
            a_469764622["width"] = "275px";
            a_469764622["opacity"] = "1";
            result_469764621 = a_469764622;
            break BeforeRet;
          } while (false);

          return result_469764621;

        }
        
function innerHEX60gensym44_469764656() {
          var result_469764657 = null;

          BeforeRet: do {
            var a_469764658 = null;
            a_469764658 = {};
            a_469764658["duration"] = 400;
            a_469764658["iterations"] = 1;
            result_469764657 = a_469764658;
            break BeforeRet;
          } while (false);

          return result_469764657;

        }
        
function HEX3Aanonymous_469764677() {
            gpaDiv_469764607.style.opacity = "1";
            gpaDiv_469764607.style.width = "275px";

          
        }

        var fmtRes_469764570 = [mnewString(0)];
        fmtRes_469764570[0].push.apply(fmtRes_469764570[0], makeNimstrLit("<div id=\"gpa\" style=\"height: 100px; opacity: 1; width: 200px; display: flex; justify-content: center; align-items: center; margin: auto;\">\x0A                <p class=\"gpa\" style=\"color:#ffffff;background-color:#1565c0;text-align:center; width:150px;border-radius:25px 0px 0px 25px;margin:0 auto;margin-top:10px; height:50px; box-shadow: 2px 2px 4px rgba(0, 0, 0, .4); line-height:25px; border-color: rgb(187, 187, 187);border-right-style: solid;\"> Weighted <br />"));;
        formatValue_469764418(fmtRes_469764570, 0, round_469764571(gpa_469764345, 2), []);
        fmtRes_469764570[0].push.apply(fmtRes_469764570[0], makeNimstrLit("</p>\x0A                <p class=\"gpa\" style=\"color:#ffffff;background-color:#1565c0;text-align:center; width:150px;border-radius:0px 25px 25px 0px;margin:0 auto;margin-top:10px; height:50px; box-shadow: 2px 2px 4px rgba(0, 0, 0, .4); line-height:25px; border-color: rgb(187, 187, 187);border-left-style: solid;\"> Unweighted <br />"));;
        formatValue_469764418(fmtRes_469764570, 0, round_469764571(unweightedgpa_469764346, 2), []);
        fmtRes_469764570[0].push.apply(fmtRes_469764570[0], makeNimstrLit("</p>\x0A            <div>"));;
        var html_469764602 = nimCopy(null, fmtRes_469764570[0], NTI33554439);
        var gpaDOM_469764603 = prsr_469763549.parseFromString(toJSStr(html_469764602), "text/html").documentElement;
        if (!((document.querySelector("#loading") == null))) {
        document.querySelector("#loading").remove();
        }
        
        document.querySelector("p[class='sectionTitle']").appendChild(gpaDOM_469764603);
        var gpaDiv_469764607 = document.querySelector("#gpa");
        gpaDiv_469764607.style.opacity = "0.6";
        gpaDiv_469764607.animate([innerHEX60gensym35_469764620()],innerHEX60gensym44_469764656()).onfinish = HEX3Aanonymous_469764677;
        calculating_469763547 = false;
        gpaDiv_469764607.onclick = activateToggle_469764347;

      
    }

  BeforeRet: do {
    if (!(calculating_469763547)) {
    break BeforeRet;
    }
    
    if (isNaN(gpa_469764345)) {
    document.querySelector("#loading").remove();
    break BeforeRet;
    }
    
    var _ = setTimeout(doAnimate_469764565, 1000);
  } while (false);

  
}
    
function initalCalculate_469764726() {
      BeforeRet: do {
        if (calculating_469763547) {
        break BeforeRet;
        }
        
        calculating_469763547 = true;
        if (!((document.querySelector("#gpa") == null))) {
        document.querySelector("#gpa").remove();
        }
        
        var loadingDOM_469764730 = prsr_469763549.parseFromString(loading_469763507, "text/html");
        document.querySelector("p[class='sectionTitle']").appendChild(loadingDOM_469764730.documentElement);
        var colontmp__469764865 = calculateGpaNum_469763758(courses_469763523, grades_469763515);
        var gpa_469764731 = colontmp__469764865["Field0"];
        var unweightedgpa_469764732 = colontmp__469764865["Field1"];
        displayGpa_469764344(gpa_469764731, unweightedgpa_469764732);
      } while (false);

      
    }

  BeforeRet: do {
    var loadingStyles_469763506 = ".lds-ellipsis { margin: 0 auto; top-margin: 40px; position: relative; width: 80px; height: 100px; z-index: 1; } .lds-ellipsis div { position: absolute; top: 33px; width: 13px; height: 13px; border-radius: 50%; background-color: #1565c0; animation-timing-function: cubic-bezier(0, 1, 1, 0); } .lds-ellipsis div:nth-child(1) { left: 8px; animation: lds-ellipsis1 0.6s infinite; } .lds-ellipsis div:nth-child(2) { left: 8px; animation: lds-ellipsis2 0.6s infinite; } .lds-ellipsis div:nth-child(3) { left: 32px; animation: lds-ellipsis2 0.6s infinite; } .lds-ellipsis div:nth-child(4) { left: 56px; animation: lds-ellipsis3 0.6s infinite; } @keyframes lds-ellipsis1 { 0% { transform: scale(0); } 100% { transform: scale(1); } } @keyframes lds-ellipsis3 { 0% { transform: scale(1); } 100% { transform: scale(0); } } @keyframes lds-ellipsis2 { 0% { transform: translate(0, 0); } 100% { transform: translate(24px, 0); } }";
    var loading_469763507 = "<div id=\"loading\" class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>";
    var grades_469763515 = newSeq_452985301(0);
    var courses_469763523 = newSeq_452985301(0);
    var gpas_469763545 = newSeq_469763528(0);
    var toggle_469763546 = true;
    var calculating_469763547 = false;
    var ogTable_469763548 = null;
    var prsr_469763549 = new DOMParser();
    if ((document.querySelector("table[class='list']") == null)) {
    break BeforeRet;
    }
    
    ogTable_469763548 = document.querySelector("table[class='list']").cloneNode(true);
    var grades_and_classes_469764736 = document.querySelector("table[class='list']").rows;
    if ((document.querySelector("p[class='sectionTitle']") == null)) {
    break BeforeRet;
    }
    
    if ((document.querySelector("#loadingStyles") == null)) {
    var styledom_469764743 = document.createElement("style");
    styledom_469764743.id = "loadingStyles";
    styledom_469764743.textContent = loadingStyles_469763506;
    document.querySelector("p[class='sectionTitle']").appendChild(styledom_469764743);
    }
    
    Label1: do {
      var i_469764752 = 0;
      var colontmp__469764797 = 0;
      colontmp__469764797 = subInt((grades_and_classes_469764736).length, 1);
      var res_469764798 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764798 <= colontmp__469764797)) break Label3;
            i_469764752 = res_469764798;
            var name_469764753 = cstrToNimstr((Temporary4 = grades_and_classes_469764736[chckIndx(i_469764752, 0, (grades_and_classes_469764736).length - 1)].cells, Temporary4)[chckIndx(0, 0, (Temporary4).length - 1)].innerText);
            if ((((grades_and_classes_469764736[chckIndx(i_469764752, 0, (grades_and_classes_469764736).length - 1)].cells).length < 3) || ((Temporary5 = grades_and_classes_469764736[chckIndx(i_469764752, 0, (grades_and_classes_469764736).length - 1)].cells, Temporary5)[chckIndx(2, 0, (Temporary5).length - 1)] == null))) {
            break BeforeRet;
            }
            
            var grade_469764760 = cstrToNimstr((Temporary6 = grades_and_classes_469764736[chckIndx(i_469764752, 0, (grades_and_classes_469764736).length - 1)].cells, Temporary6)[chckIndx(2, 0, (Temporary6).length - 1)].innerText.replace(new RegExp("[^A-F+-]","g"),""));
            if (ifValid_469763550(name_469764753, grade_469764760)) {
            var Temporary7 = nimCopy(null, grade_469764760, NTI33554439);
            grades_469763515.push(Temporary7);;
            var Temporary8 = nimCopy(null, name_469764753, NTI33554439);
            courses_469763523.push(Temporary8);;
            }
            
            res_469764798 = addInt(res_469764798, 1);
          }
      } while (false);
    } while (false);
    if ((((courses_469763523).length == 0) || ((grades_469763515).length == 0))) {
    break BeforeRet;
    }
    
    if ((document.querySelector("#loading") == null)) {
    initalCalculate_469764726();
    }
    
  } while (false);

  
}
if (true) {
main_469763505();
}

