/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078600 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078607 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554437 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI469762979 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555126 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI33555126 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555126.node = NNI33555126;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
NTI33555126.base = NTI33555125;
var NNI469762979 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554437, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554437, name: "Field1", sons: null}]};
NTI469762979.node = NNI469762979;
var NNI973078607 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI973078600, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI973078607.node = NNI973078607;

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}

function eqStrings(a_33556931, b_33556932) {
        if (a_33556931 == b_33556932) return true;
    if (a_33556931 === null && b_33556932.length == 0) return true;
    if (b_33556932 === null && a_33556931.length == 0) return true;
    if ((!a_33556931) || (!b_33556932)) return false;
    var alen = a_33556931.length;
    if (alen != b_33556932.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556931[i] != b_33556932[i]) return false;
    return true;
  

  
}
    var gradeLetters_469762129 = [makeNimstrLit("A+"), makeNimstrLit("A"), makeNimstrLit("A-"), makeNimstrLit("B+"), makeNimstrLit("B"), makeNimstrLit("B-"), makeNimstrLit("C+"), makeNimstrLit("C"), makeNimstrLit("C-"), makeNimstrLit("D+"), makeNimstrLit("D"), makeNimstrLit("D-"), makeNimstrLit("F")];

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}
              var halfYear_469763521 = [makeNimstrLit("Business Law"), makeNimstrLit("Computer Applications"), makeNimstrLit("Entrepreneurship"), makeNimstrLit("Fashion Marketing"), makeNimstrLit("Financial Literacy"), makeNimstrLit("International Business"), makeNimstrLit("Sports & Entertainment Management"), makeNimstrLit("Computer Science"), makeNimstrLit("Java Honors"), makeNimstrLit("Advanced Java Honors"), makeNimstrLit("Web Design"), makeNimstrLit("Creative Writing I"), makeNimstrLit("Creative Writing II Honors"), makeNimstrLit("Film Study"), makeNimstrLit("Forensics I"), makeNimstrLit("Forensics II"), makeNimstrLit("Parcc English"), makeNimstrLit("Ceramics I"), makeNimstrLit("Ceramics II"), makeNimstrLit("Ceramics III"), makeNimstrLit("Crafts I"), makeNimstrLit("Crafts II"), makeNimstrLit("Photography"), makeNimstrLit("Advanced Photography"), makeNimstrLit("Culinary Arts I"), makeNimstrLit("Foods Around the World"), makeNimstrLit("Culinary Arts II"), makeNimstrLit("Child Development I"), makeNimstrLit("Child Development II"), makeNimstrLit("Child Development III"), makeNimstrLit("Interior Design I"), makeNimstrLit("Interior Design II"), makeNimstrLit("Introduction to Technology"), makeNimstrLit("Technology II"), makeNimstrLit("Strategic Design"), makeNimstrLit("Video and Broadcast Production I"), makeNimstrLit("Video and Broadcast Production II"), makeNimstrLit("Broadway Workshop"), makeNimstrLit("Math Lab"), makeNimstrLit("Parcc Mathematics"), makeNimstrLit("Economics"), makeNimstrLit("Economics Honors"), makeNimstrLit("Psychology"), makeNimstrLit("Advanced Psychology"), makeNimstrLit("Sociology")];
              var labs_469763522 = [makeNimstrLit("Biology"), makeNimstrLit("Biology Enriched"), makeNimstrLit("Biology Honors"), makeNimstrLit("Ap Biology"), makeNimstrLit("Principles in Anatomy"), makeNimstrLit("Anatomy & Physiology"), makeNimstrLit("Research in Molecular Biology"), makeNimstrLit("Chemistry"), makeNimstrLit("Chemistry Enriched"), makeNimstrLit("Chemistry Honors"), makeNimstrLit("AP Chemistry"), makeNimstrLit("Physics Enriched"), makeNimstrLit("Physics Honors"), makeNimstrLit("AP Physics C: Mechanics"), makeNimstrLit("AP Physics C: Electricity & Magnetism"), makeNimstrLit("AP Environmental Science"), makeNimstrLit("Science Research Program I"), makeNimstrLit("Science Research Program II"), makeNimstrLit("Science Research Program III")];
              var semester_469763523 = [makeNimstrLit("Forensic Science"), makeNimstrLit("Robotics Engineering")];

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}

function mulInt(a_33556948, b_33556949) {
        var result = a_33556948 * b_33556949;
    checkOverflowInt(result);
    return result;
  

  
}

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}
            var gpaAp_469763520 = {data: [{Field0: 919786464, Field1: makeNimstrLit("B-"), Field2: 3.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1673550086, Field1: makeNimstrLit("D"), Field2: 2.0}, {Field0: -1742008058, Field1: makeNimstrLit("F"), Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -861508982, Field1: makeNimstrLit("B"), Field2: 4.0}, {Field0: 2060572171, Field1: makeNimstrLit("B+"), Field2: 4.3}, {Field0: -367198581, Field1: makeNimstrLit("C"), Field2: 3.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1423767502, Field1: makeNimstrLit("A"), Field2: 5.0}, {Field0: 142754382, Field1: makeNimstrLit("A-"), Field2: 4.7}, {Field0: -1437737522, Field1: makeNimstrLit("C+"), Field2: 3.3}, {Field0: -10184399, Field1: makeNimstrLit("A+"), Field2: 5.3}, {Field0: -1818831855, Field1: makeNimstrLit("D+"), Field2: 2.3}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1598464886, Field1: makeNimstrLit("C-"), Field2: 2.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -586780232, Field1: makeNimstrLit("D-"), Field2: 1.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}], counter: 13};
            var gpaHonors_469763515 = {data: [{Field0: 919786464, Field1: makeNimstrLit("B-"), Field2: 3.2}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1673550086, Field1: makeNimstrLit("D"), Field2: 1.5}, {Field0: -1742008058, Field1: makeNimstrLit("F"), Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -861508982, Field1: makeNimstrLit("B"), Field2: 3.5}, {Field0: 2060572171, Field1: makeNimstrLit("B+"), Field2: 3.8}, {Field0: -367198581, Field1: makeNimstrLit("C"), Field2: 2.5}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1423767502, Field1: makeNimstrLit("A"), Field2: 4.5}, {Field0: 142754382, Field1: makeNimstrLit("A-"), Field2: 4.2}, {Field0: -1437737522, Field1: makeNimstrLit("C+"), Field2: 2.8}, {Field0: -10184399, Field1: makeNimstrLit("A+"), Field2: 4.8}, {Field0: -1818831855, Field1: makeNimstrLit("D+"), Field2: 1.8}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1598464886, Field1: makeNimstrLit("C-"), Field2: 2.2}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -586780232, Field1: makeNimstrLit("D-"), Field2: 1.2}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}], counter: 13};
              var gpaRegular_469763510 = {data: [{Field0: 919786464, Field1: makeNimstrLit("B-"), Field2: 2.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1673550086, Field1: makeNimstrLit("D"), Field2: 1.0}, {Field0: -1742008058, Field1: makeNimstrLit("F"), Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -861508982, Field1: makeNimstrLit("B"), Field2: 3.0}, {Field0: 2060572171, Field1: makeNimstrLit("B+"), Field2: 3.3}, {Field0: -367198581, Field1: makeNimstrLit("C"), Field2: 2.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1423767502, Field1: makeNimstrLit("A"), Field2: 4.0}, {Field0: 142754382, Field1: makeNimstrLit("A-"), Field2: 3.7}, {Field0: -1437737522, Field1: makeNimstrLit("C+"), Field2: 2.3}, {Field0: -10184399, Field1: makeNimstrLit("A+"), Field2: 4.3}, {Field0: -1818831855, Field1: makeNimstrLit("D+"), Field2: 1.3}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 1598464886, Field1: makeNimstrLit("C-"), Field2: 1.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: -586780232, Field1: makeNimstrLit("D-"), Field2: 0.7}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}, {Field0: 0, Field1: [], Field2: 0.0}], counter: 13};
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr(46, 44);

function nimCharToStr(x_33556517) {
  var result_33556518 = [];

    result_33556518 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556518[0] = x_33556517;

  return result_33556518;

}
var ConstSet10 = setConstr([65, 90]);
var ConstSet11 = setConstr([97, 122]);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_687866018 = [0];
var loadingStyles_469762055 = ".lds-ellipsis { margin: 0 auto; top-margin: 40px; position: relative; width: 80px; height: 100px; z-index: 1; } .lds-ellipsis div { position: absolute; top: 33px; width: 13px; height: 13px; border-radius: 50%; background-color: #1565c0; animation-timing-function: cubic-bezier(0, 1, 1, 0); } .lds-ellipsis div:nth-child(1) { left: 8px; animation: lds-ellipsis1 0.6s infinite; } .lds-ellipsis div:nth-child(2) { left: 8px; animation: lds-ellipsis2 0.6s infinite; } .lds-ellipsis div:nth-child(3) { left: 32px; animation: lds-ellipsis2 0.6s infinite; } .lds-ellipsis div:nth-child(4) { left: 56px; animation: lds-ellipsis3 0.6s infinite; } @keyframes lds-ellipsis1 { 0% { transform: scale(0); } 100% { transform: scale(1); } } @keyframes lds-ellipsis3 { 0% { transform: scale(1); } 100% { transform: scale(0); } } @keyframes lds-ellipsis2 { 0% { transform: translate(0, 0); } 100% { transform: translate(24px, 0); } }";
var loading_469762056 = "<div id=\"loading\" class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>";

function newSeq_452985301(len_452985303) {
  var result_452985304 = [];

    result_452985304 = new Array(len_452985303); for (var i = 0 ; i < len_452985303 ; ++i) { result_452985304[i] = []; }
  return result_452985304;

}

function newSeq_469762095(len_469762097) {
  var result_469762098 = [];

    result_469762098 = new Array(len_469762097); for (var i = 0 ; i < len_469762097 ; ++i) { result_469762098[i] = 0.0; }
  return result_469762098;

}
var grades_469762082 = [[]];
var courses_469762090 = [newSeq_452985301(0)];
var credits_469762112 = [newSeq_469762095(0)];
var gpas_469762117 = [[]];
var unweightedgpas_469762125 = [newSeq_469762095(0)];
var total_credits_469762126 = [0.0];
var qualityPoints_469762127 = [0.0];
var calculating_469762128 = [false];

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_469764537 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764537 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_469764537;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_469764537 = addInt(i_469764537, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function nsuFindChar(s_939525624, sub_939525625, start_939525626, last_939525627) {
    var Temporary1;

  var result_939525628 = 0;

  BeforeRet: do {
    if ((last_939525627 == 0)) {
    Temporary1 = (s_939525624).length - 1;
    }
    else {
    Temporary1 = last_939525627;
    }
    
    var last_939525629 = Temporary1;
    Label2: do {
      var i_939525639 = 0;
      var colontmp__469764544 = 0;
      colontmp__469764544 = start_939525626;
      var res_469764545 = colontmp__469764544;
      Label3: do {
          Label4: while (true) {
          if (!(res_469764545 <= last_939525629)) break Label4;
            i_939525639 = res_469764545;
            if ((sub_939525625 == s_939525624[chckIndx(i_939525639, 0, (s_939525624).length - 1)])) {
            result_939525628 = i_939525639;
            break BeforeRet;
            }
            
            res_469764545 = addInt(res_469764545, 1);
          }
      } while (false);
    } while (false);
    result_939525628 = -1;
    break BeforeRet;
  } while (false);

  return result_939525628;

}

function nsuFindStrA(a_939525604, s_939525605, sub_939525606, start_939525607, last_939525608) {
    var Temporary1;

  var result_939525609 = 0;

  BeforeRet: do {
    if ((last_939525608 == 0)) {
    Temporary1 = (s_939525605).length - 1;
    }
    else {
    Temporary1 = last_939525608;
    }
    
    var last_939525610 = Temporary1;
    var subLast_939525611 = subInt((sub_939525606).length, 1);
    if ((subLast_939525611 == -1)) {
    result_939525609 = start_939525607;
    break BeforeRet;
    }
    
    var skip_939525612 = start_939525607;
    Label2: do {
        Label3: while (true) {
        if (!(subLast_939525611 <= subInt(last_939525610, skip_939525612))) break Label3;
          var i_939525613 = subLast_939525611;
          Label4: do {
              Label5: while (true) {
              if (!(s_939525605[chckIndx(addInt(skip_939525612, i_939525613), 0, (s_939525605).length - 1)] == sub_939525606[chckIndx(i_939525613, 0, (sub_939525606).length - 1)])) break Label5;
                if ((i_939525613 == 0)) {
                result_939525609 = skip_939525612;
                break BeforeRet;
                }
                
                i_939525613 = subInt(i_939525613, 1);
              }
          } while (false);
          skip_939525612 = addInt(skip_939525612, a_939525604[chckIndx(s_939525605[chckIndx(addInt(skip_939525612, subLast_939525611), 0, (s_939525605).length - 1)], 0, (a_939525604).length - 1)]);
        }
    } while (false);
    result_939525609 = -1;
    break BeforeRet;
  } while (false);

  return result_939525609;

}

function fill_939525563(a_939525565, value_939525566) {
    var xHEX60gensym166_939525572 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(xHEX60gensym166_939525572 <= (a_939525565).length - 1)) break Label2;
          a_939525565[chckIndx(xHEX60gensym166_939525572, 0, (a_939525565).length - 1)] = value_939525566;
          xHEX60gensym166_939525572 = addInt(xHEX60gensym166_939525572, 1);
        }
    } while (false);

  
}

function nsuInitSkipTable(a_939525560, sub_939525561) {
    var m_939525562 = (sub_939525561).length;
    fill_939525563(a_939525560, m_939525562);
    Label1: do {
      var i_939525581 = 0;
      var colontmp__469764550 = 0;
      colontmp__469764550 = subInt(m_939525562, 1);
      var i_469764551 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764551 < colontmp__469764550)) break Label3;
            i_939525581 = i_469764551;
            a_939525560[chckIndx(sub_939525561[chckIndx(i_939525581, 0, (sub_939525561).length - 1)], 0, (a_939525560).length - 1)] = subInt(subInt(m_939525562, 1), i_939525581);
            i_469764551 = addInt(i_469764551, 1);
          }
      } while (false);
    } while (false);

  
}

function nsuInitNewSkipTable(sub_939525601) {
  var result_939525602 = [new Int32Array(256)];

    nsuInitSkipTable(result_939525602[0], sub_939525601);

  return result_939525602[0];

}

function nsuFindStr(s_939525657, sub_939525658, start_939525659, last_939525660) {
  var result_939525661 = 0;

  BeforeRet: do {
    if ((subInt((s_939525657).length, start_939525659) < (sub_939525658).length)) {
    result_939525661 = -1;
    break BeforeRet;
    }
    
    if (((sub_939525658).length == 1)) {
    result_939525661 = nsuFindChar(s_939525657, sub_939525658[chckIndx(0, 0, (sub_939525658).length - 1)], start_939525659, last_939525660);
    break BeforeRet;
    }
    
    result_939525661 = nsuFindStrA(nsuInitNewSkipTable(sub_939525658), s_939525657, sub_939525658, start_939525659, last_939525660);
  } while (false);

  return result_939525661;

}

function contains_939525784(s_939525785, sub_939525786) {
  var result_939525787 = false;

  BeforeRet: do {
    result_939525787 = (0 <= nsuFindStr(s_939525785, sub_939525786, 0, 0));
    break BeforeRet;
  } while (false);

  return result_939525787;

}

function find_973078576(a_973078579, item_973078580) {
  var result_973078581 = 0;

  BeforeRet: do {
    result_973078581 = 0;
    Label1: do {
      var i_973078585 = [];
      var i_469764556 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764556 < (a_973078579).length)) break Label3;
            i_973078585 = a_973078579[chckIndx(i_469764556, 0, (a_973078579).length - 1)];
            if (eqStrings(i_973078585, item_973078580)) {
            break BeforeRet;
            }
            
            result_973078581 = addInt(result_973078581, 1);
            i_469764556 = addInt(i_469764556, 1);
          }
      } while (false);
    } while (false);
    result_973078581 = -1;
  } while (false);

  return result_973078581;

}

function contains_973078571(a_973078573, item_973078574) {
  var result_973078575 = false;

  BeforeRet: do {
    result_973078575 = (0 <= find_973078576(a_973078573, item_973078574));
    break BeforeRet;
  } while (false);

  return result_973078575;

}

function ifValid_469763560(name_469763561, grade_469763562) {
  var result_469763563 = false;

  BeforeRet: do {
    result_469763563 = ((!(contains_939525784(name_469763561, makeNimstrLit("Physical Ed"))) && !(contains_939525784(name_469763561, makeNimstrLit("Health")))) && contains_973078571(gradeLetters_469762129, grade_469763562));
    break BeforeRet;
  } while (false);

  return result_469763563;

}

function addEscapedChar_33557860(s_33557861, s_33557861_Idx, c_33557862) {
    switch (c_33557862) {
    case 7:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\a"));;
      break;
    case 8:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\b"));;
      break;
    case 9:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\t"));;
      break;
    case 10:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\n"));;
      break;
    case 11:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\v"));;
      break;
    case 12:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\f"));;
      break;
    case 13:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\r"));;
      break;
    case 27:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\e"));;
      break;
    case 92:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\\\"));;
      break;
    case 39:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\\'"));;
      break;
    case 34:
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\\""));;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557861[s_33557861_Idx], c_33557862);;
      break;
    default: 
      s_33557861[s_33557861_Idx].push.apply(s_33557861[s_33557861_Idx], makeNimstrLit("\\x"));;
      var n_33557872 = c_33557862;
      addChar(s_33557861[s_33557861_Idx], makeNimstrLit("0123456789ABCDEF")[chckIndx(((n_33557872 & 240) >> 4), 0, (makeNimstrLit("0123456789ABCDEF")).length - 1)]);;
      addChar(s_33557861[s_33557861_Idx], makeNimstrLit("0123456789ABCDEF")[chckIndx((n_33557872 & 15), 0, (makeNimstrLit("0123456789ABCDEF")).length - 1)]);;
      break;
    }

  
}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function addQuoted_469764504(s_469764506, s_469764506_Idx, x_469764507) {
    s_469764506[s_469764506_Idx].push.apply(s_469764506[s_469764506_Idx], makeNimstrLit("\""));;
    Label1: do {
      var c_469764508 = 0;
      var i_469764564 = 0;
      var L_469764565 = (x_469764507).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764564 < L_469764565)) break Label3;
            c_469764508 = x_469764507[chckIndx(i_469764564, 0, (x_469764507).length - 1)];
            if ((c_469764508 <= 127)) {
            addEscapedChar_33557860(s_469764506, s_469764506_Idx, c_469764508);
            }
            else {
            addChar(s_469764506[s_469764506_Idx], c_469764508);;
            }
            
            i_469764564 = addInt(i_469764564, 1);
            if (!(((x_469764507).length == L_469764565))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    s_469764506[s_469764506_Idx].push.apply(s_469764506[s_469764506_Idx], makeNimstrLit("\""));;

  
}

function collectionToString_469764489(x_469764491, prefix_469764492, separator_469764493, suffix_469764494) {
  var result_469764495 = [[]];

    result_469764495[0] = nimCopy(null, prefix_469764492, NTI33554439);
    var firstElement_469764496 = true;
    Label1: do {
      var value_469764500 = [];
      var i_469764560 = 0;
      var L_469764561 = (x_469764491).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764560 < L_469764561)) break Label3;
            value_469764500 = x_469764491[i_469764560];
            if (firstElement_469764496) {
            firstElement_469764496 = false;
            }
            else {
            result_469764495[0].push.apply(result_469764495[0], separator_469764493);;
            }
            
            addQuoted_469764504(result_469764495, 0, value_469764500);
            i_469764560 += 1;
            if (!(((x_469764491).length == L_469764561))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_469764495[0].push.apply(result_469764495[0], suffix_469764494);;

  return result_469764495[0];

}

function HEX24_469764485(x_469764487) {
  var result_469764488 = [];

    result_469764488 = nimCopy(null, collectionToString_469764489(x_469764487, makeNimstrLit("@["), makeNimstrLit(", "), makeNimstrLit("]")), NTI33554439);

  return result_469764488;

}

function HEX2BHEX3D_939526192(x_939526194, x_939526194_Idx, y_939526195) {
    x_939526194[x_939526194_Idx] = (x_939526194[x_939526194_Idx] + y_939526195);

  
}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function imul_687866173(a_687866174, b_687866175) {
  var result_687866176 = 0;

    var mask_687866177 = 65535;
    var aHi_687866182 = ((a_687866174 >>> 16) & mask_687866177);
    var aLo_687866183 = (a_687866174 & mask_687866177);
    var bHi_687866188 = ((b_687866175 >>> 16) & mask_687866177);
    var bLo_687866189 = (b_687866175 & mask_687866177);
    result_687866176 = ((((aLo_687866183 * bLo_687866189) >>> 0) + (((((aHi_687866182 * bLo_687866189) >>> 0) + ((aLo_687866183 * bHi_687866188) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_687866176;

}

function rotl32_687866194(x_687866195, r_687866196) {
  var result_687866197 = 0;

    result_687866197 = ((x_687866195 << r_687866196) | (x_687866195 >>> subInt(32, r_687866196)));

  return result_687866197;

}

function murmurHash_687866206(x_687866207) {
  var result_687866208 = 0;

  BeforeRet: do {
    var size_687866217 = (x_687866207).length;
    var stepSize_687866218 = 4;
    var n_687866219 = divInt(size_687866217, stepSize_687866218);
    var h1_687866220 = 0;
    var i_687866221 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_687866221 < mulInt(n_687866219, stepSize_687866218))) break Label2;
          var k1_687866222 = 0;
          var j_687866223 = stepSize_687866218;
          Label3: do {
              Label4: while (true) {
              if (!(0 < j_687866223)) break Label4;
                j_687866223 = subInt(j_687866223, 1);
                k1_687866222 = ((k1_687866222 << 8) | x_687866207[chckIndx(addInt(i_687866221, j_687866223), 0, (x_687866207).length - 1)]);
              }
          } while (false);
          i_687866221 = addInt(i_687866221, stepSize_687866218);
          k1_687866222 = imul_687866173(k1_687866222, 3432918353);
          k1_687866222 = rotl32_687866194(k1_687866222, 15);
          k1_687866222 = imul_687866173(k1_687866222, 461845907);
          h1_687866220 = (h1_687866220 ^ k1_687866222);
          h1_687866220 = rotl32_687866194(h1_687866220, 13);
          h1_687866220 = ((((h1_687866220 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    var k1_687866240 = 0;
    var rem_687866241 = modInt(size_687866217, stepSize_687866218);
    Label5: do {
        Label6: while (true) {
        if (!(0 < rem_687866241)) break Label6;
          rem_687866241 = subInt(rem_687866241, 1);
          k1_687866240 = ((k1_687866240 << 8) | x_687866207[chckIndx(addInt(i_687866221, rem_687866241), 0, (x_687866207).length - 1)]);
        }
    } while (false);
    k1_687866240 = imul_687866173(k1_687866240, 3432918353);
    k1_687866240 = rotl32_687866194(k1_687866240, 15);
    k1_687866240 = imul_687866173(k1_687866240, 461845907);
    h1_687866220 = (h1_687866220 ^ k1_687866240);
    h1_687866220 = (h1_687866220 ^ size_687866217);
    h1_687866220 = (h1_687866220 ^ (h1_687866220 >>> 16));
    h1_687866220 = imul_687866173(h1_687866220, 2246822507);
    h1_687866220 = (h1_687866220 ^ (h1_687866220 >>> 13));
    h1_687866220 = imul_687866173(h1_687866220, 3266489909);
    h1_687866220 = (h1_687866220 ^ (h1_687866220 >>> 16));
    result_687866208 = (h1_687866220 | 0);
    break BeforeRet;
  } while (false);

  return result_687866208;

}

function hash_687866305(x_687866306) {
  var result_687866307 = 0;

    result_687866307 = murmurHash_687866206((x_687866306.slice(0, (x_687866306).length - 1 + 1)));

  return result_687866307;

}

function isFilled_671088671(hcode_671088672) {
  var result_671088673 = false;

    result_671088673 = !((hcode_671088672 == 0));

  return result_671088673;

}

function nextTry_671088674(h_671088675, maxHash_671088676) {
  var result_671088677 = 0;

    result_671088677 = (addInt(h_671088675, 1) & maxHash_671088676);

  return result_671088677;

}

function rawGet_469762278(t_469762281, key_469762282, hc_469762283, hc_469762283_Idx) {
            var Temporary3;

  var result_469762284 = 0;

  BeforeRet: do {
    hc_469762283[hc_469762283_Idx] = hash_687866305(key_469762282);
    if ((hc_469762283[hc_469762283_Idx] == 0)) {
    hc_469762283[hc_469762283_Idx] = 314159265;
    }
    
    if (((t_469762281.data).length == 0)) {
    result_469762284 = -1;
    break BeforeRet;
    }
    
    var h_469762335 = (hc_469762283[hc_469762283_Idx] & (t_469762281.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_671088671(t_469762281.data[chckIndx(h_469762335, 0, (t_469762281.data).length - 1)].Field0)) break Label2;
            if (!(t_469762281.data[chckIndx(h_469762335, 0, (t_469762281.data).length - 1)].Field0 == hc_469762283[hc_469762283_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_469762281.data[chckIndx(h_469762335, 0, (t_469762281.data).length - 1)].Field1, key_469762282);            }          if (Temporary3) {
          result_469762284 = h_469762335;
          break BeforeRet;
          }
          
          h_469762335 = nextTry_671088674(h_469762335, (t_469762281.data).length - 1);
        }
    } while (false);
    result_469762284 = subInt(-1, h_469762335);
  } while (false);

  return result_469762284;

}

function raiseKeyError_620758759(key_620758761) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_620758761 || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_469763866(t_469763869, key_469763870) {
  var result_469763871 = 0.0;

    var hcHEX60gensym20_469763872 = [0];
    var indexHEX60gensym20_469763879 = rawGet_469762278(t_469763869, key_469763870, hcHEX60gensym20_469763872, 0);
    if ((0 <= indexHEX60gensym20_469763879)) {
    result_469763871 = t_469763869.data[chckIndx(indexHEX60gensym20_469763879, 0, (t_469763869.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_620758759(key_469763870);
    }
    

  return result_469763871;

}

function calculateGpaNum_469763610(ccourses_469763611, cgrades_469763612) {
  var result_469763613 = {Field0: 0.0, Field1: 0.0};

  BeforeRet: do {
    Label1: do {
      var course_469763634 = [];
      var i_469764569 = 0;
      var L_469764570 = (courses_469762090[0]).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764569 < L_469764570)) break Label3;
            course_469763634 = courses_469762090[0][chckIndx(i_469764569, 0, (courses_469762090[0]).length - 1)];
            if (contains_973078571(halfYear_469763521, course_469763634)) {
            credits_469762112[0].push(2.5);;
            HEX2BHEX3D_939526192(total_credits_469762126, 0, 2.5);
            }
            else {
            if (contains_973078571(labs_469763522, course_469763634)) {
            credits_469762112[0].push(6.0);;
            HEX2BHEX3D_939526192(total_credits_469762126, 0, 6.0);
            }
            else {
            if (contains_973078571(semester_469763523, course_469763634)) {
            credits_469762112[0].push(3.0);;
            HEX2BHEX3D_939526192(total_credits_469762126, 0, 3.0);
            }
            else {
              credits_469762112[0].push(5.0);;
              HEX2BHEX3D_939526192(total_credits_469762126, 0, 5.0);
            }
            }}
            i_469764569 = addInt(i_469764569, 1);
            if (!(((courses_469762090[0]).length == L_469764570))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_469763812 = 0;
      var colontmp__469764573 = 0;
      colontmp__469764573 = subInt((courses_469762090[0]).length, 1);
      var res_469764574 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_469764574 <= colontmp__469764573)) break Label6;
            i_469763812 = res_469764574;
            if (contains_939525784(courses_469762090[0][chckIndx(i_469763812, 0, (courses_469762090[0]).length - 1)], makeNimstrLit("AP"))) {
            gpas_469762117[0].push(HEX5BHEX5D_469763866(gpaAp_469763520, grades_469762082[0][chckIndx(i_469763812, 0, (grades_469762082[0]).length - 1)]));;
            }
            else {
            if (contains_939525784(courses_469762090[0][chckIndx(i_469763812, 0, (courses_469762090[0]).length - 1)], makeNimstrLit("Honors"))) {
            gpas_469762117[0].push(HEX5BHEX5D_469763866(gpaHonors_469763515, grades_469762082[0][chckIndx(i_469763812, 0, (grades_469762082[0]).length - 1)]));;
            }
            else {
            gpas_469762117[0].push(HEX5BHEX5D_469763866(gpaRegular_469763510, grades_469762082[0][chckIndx(i_469763812, 0, (grades_469762082[0]).length - 1)]));;
            }
            }
            res_469764574 = addInt(res_469764574, 1);
          }
      } while (false);
    } while (false);
    Label7: do {
      var i_469764071 = 0;
      var colontmp__469764577 = 0;
      colontmp__469764577 = subInt((courses_469762090[0]).length, 1);
      var res_469764578 = 0;
      Label8: do {
          Label9: while (true) {
          if (!(res_469764578 <= colontmp__469764577)) break Label9;
            i_469764071 = res_469764578;
            HEX2BHEX3D_939526192(qualityPoints_469762127, 0, (gpas_469762117[0][chckIndx(i_469764071, 0, (gpas_469762117[0]).length - 1)] * credits_469762112[0][chckIndx(i_469764071, 0, (credits_469762112[0]).length - 1)]));
            res_469764578 = addInt(res_469764578, 1);
          }
      } while (false);
    } while (false);
    var gpa_469764076 = (qualityPoints_469762127[0] / total_credits_469762126[0]);
    Label10: do {
      var i_469764084 = 0;
      var colontmp__469764581 = 0;
      colontmp__469764581 = subInt((grades_469762082[0]).length, 1);
      var res_469764582 = 0;
      Label11: do {
          Label12: while (true) {
          if (!(res_469764582 <= colontmp__469764581)) break Label12;
            i_469764084 = res_469764582;
            unweightedgpas_469762125[0].push(HEX5BHEX5D_469763866(gpaRegular_469763510, grades_469762082[0][chckIndx(i_469764084, 0, (grades_469762082[0]).length - 1)]));;
            res_469764582 = addInt(res_469764582, 1);
          }
      } while (false);
    } while (false);
    var unweightedgpa_469764147 = 0.0;
    var unweightedQualityPoints_469764148 = [0.0];
    Label13: do {
      var i_469764156 = 0;
      var colontmp__469764585 = 0;
      colontmp__469764585 = subInt((grades_469762082[0]).length, 1);
      var res_469764586 = 0;
      Label14: do {
          Label15: while (true) {
          if (!(res_469764586 <= colontmp__469764585)) break Label15;
            i_469764156 = res_469764586;
            HEX2BHEX3D_939526192(unweightedQualityPoints_469764148, 0, (unweightedgpas_469762125[0][chckIndx(i_469764156, 0, (unweightedgpas_469762125[0]).length - 1)] * credits_469762112[0][chckIndx(i_469764156, 0, (credits_469762112[0]).length - 1)]));
            res_469764586 = addInt(res_469764586, 1);
          }
      } while (false);
    } while (false);
    unweightedgpa_469764147 = (unweightedQualityPoints_469764148[0] / total_credits_469762126[0]);
    var colontmp__469764588 = gpa_469764076;
    var colontmp__469764589 = unweightedgpa_469764147;
    result_469763613 = nimCopy(result_469763613, {Field0: colontmp__469764588, Field1: colontmp__469764589}, NTI469762979);
    break BeforeRet;
  } while (false);

  return result_469763613;

}

function nimFloatToString_352321654(a_352321655) {
  var result_352321656 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_352321655))
      result_352321656 = a_352321655 === 0 && 1 / a_352321655 < 0 ? "-0.0" : a_352321655+".0"
    else {
      result_352321656 = a_352321655+""
      if(nimOnlyDigitsOrMinus(result_352321656)){
        result_352321656 = a_352321655+".0"
      }
    }
  

  return result_352321656;

}

function addFloat_33557372(result_33557374, result_33557374_Idx, x_33557375) {
    add_33556419(result_33557374, result_33557374_Idx, nimFloatToString_352321654(x_33557375));

  
}

function HEX24_33557368(x_33557370) {
  var result_33557371 = [[]];

    addFloat_33557372(result_33557371, 0, x_33557370);

  return result_33557371[0];

}

function parseSaturatedNatural_956301628(s_956301629, b_956301630, b_956301630_Idx, start_956301631) {
      var Temporary1;
          var Temporary4;

  var result_956301632 = 0;

    var i_956301633 = start_956301631;
    if (((i_956301633 < (s_956301629).length) && (s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)] == 43))) {
    i_956301633 = addInt(i_956301633, 1);
    }
    
      if (!(i_956301633 < (s_956301629).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)]] != undefined);      }    if (Temporary1) {
    b_956301630[b_956301630_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_956301633 < (s_956301629).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_956301652 = subInt(s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)], 48);
          if ((b_956301630[b_956301630_Idx] <= divInt(subInt(2147483647, c_956301652), 10))) {
          b_956301630[b_956301630_Idx] = addInt(mulInt(b_956301630[b_956301630_Idx], 10), c_956301652);
          }
          else {
            b_956301630[b_956301630_Idx] = 2147483647;
          }
          
          i_956301633 = addInt(i_956301633, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_956301633 < (s_956301629).length) && (s_956301629[chckIndx(i_956301633, 0, (s_956301629).length - 1)] == 95))) break Label6;
                i_956301633 = addInt(i_956301633, 1);
              }
          } while (false);
        }
    } while (false);
    result_956301632 = subInt(i_956301633, start_956301631);
    }
    

  return result_956301632;

}

function HEX5BHEX5D_1040190618(s_1040190621, x_1040190622) {
  var result_1040190623 = [];

    var a_1040190625 = x_1040190622.a;
    var L_1040190627 = addInt(subInt(subInt((s_1040190621).length, x_1040190622.b), a_1040190625), 1);
    result_1040190623 = nimCopy(null, mnewString(chckRange(L_1040190627, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_1040190632 = 0;
      var i_469764596 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764596 < L_1040190627)) break Label3;
            i_1040190632 = i_469764596;
            result_1040190623[chckIndx(i_1040190632, 0, (result_1040190623).length - 1)] = s_1040190621[chckIndx(addInt(i_1040190632, a_1040190625), 0, (s_1040190621).length - 1)];
            i_469764596 = addInt(i_469764596, 1);
          }
      } while (false);
    } while (false);

  return result_1040190623;

}

function HEX2EHEX2E_973078608(a_973078611, b_973078612) {
  var result_973078615 = ({a: 0, b: 0});

    result_973078615 = nimCopy(result_973078615, {a: a_973078611, b: b_973078612}, NTI973078607);

  return result_973078615;

}

function parseStandardFormatSpecifier_1107296314(s_1107296315, start_1107296316, ignoreUnknownSuffix_1107296317) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1107296318 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1107296318.fill = 32;
    result_1107296318.align = 0;
    result_1107296318.sign = 45;
    var i_1107296320 = start_1107296316;
    if (((addInt(i_1107296320, 1) < (s_1107296315).length) && (ConstSet2[s_1107296315[chckIndx(addInt(i_1107296320, 1), 0, (s_1107296315).length - 1)]] != undefined))) {
    result_1107296318.fill = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    result_1107296318.align = s_1107296315[chckIndx(addInt(i_1107296320, 1), 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 2);
    }
    else {
    if (((i_1107296320 < (s_1107296315).length) && (ConstSet3[s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)]] != undefined))) {
    result_1107296318.align = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 1);
    }
    }
    if (((i_1107296320 < (s_1107296315).length) && (ConstSet4[s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)]] != undefined))) {
    result_1107296318.sign = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
    if (((i_1107296320 < (s_1107296315).length) && (s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)] == 35))) {
    result_1107296318.alternateForm = true;
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
      if (!((addInt(i_1107296320, 1) < (s_1107296315).length) && (s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_1107296315[chckIndx(addInt(i_1107296320, 1), 0, (s_1107296315).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1107296318.padWithZero = true;
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
    var parsedLength_1107296357 = parseSaturatedNatural_956301628(s_1107296315, result_1107296318, "minimumWidth", i_1107296320);
    i_1107296320 = addInt(i_1107296320, parsedLength_1107296357);
    if (((i_1107296320 < (s_1107296315).length) && (s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)] == 46))) {
    i_1107296320 = addInt(i_1107296320, 1);
    var parsedLengthB_1107296366 = parseSaturatedNatural_956301628(s_1107296315, result_1107296318, "precision", i_1107296320);
    i_1107296320 = addInt(i_1107296320, parsedLengthB_1107296366);
    }
    else {
      result_1107296318.precision = -1;
    }
    
      if (!(i_1107296320 < (s_1107296315).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1107296318.typ = s_1107296315[chckIndx(i_1107296320, 0, (s_1107296315).length - 1)];
    i_1107296320 = addInt(i_1107296320, 1);
    }
    
    result_1107296318.endPosition = i_1107296320;
      if (!!((i_1107296320 == (s_1107296315).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1107296317);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_1040190618(s_1107296315, HEX2EHEX2E_973078608(i_1107296320, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1107296318;

}

function nsuformatBiggestFloat(f_939526009, format_939526010, precision_939526011, decimalSep_939526012) {
  var result_939526013 = [];

    var precision_939526014 = precision_939526011;
    if ((precision_939526014 == -1)) {
    precision_939526014 = 6;
    }
    
    var res_939526015 = null;
    switch (format_939526010) {
    case 0:
      res_939526015 = f_939526009.toString();
      break;
    case 1:
      res_939526015 = f_939526009.toFixed(precision_939526014);
      break;
    case 2:
      res_939526015 = f_939526009.toExponential(precision_939526014);
      break;
    }
    result_939526013 = nimCopy(null, cstrToNimstr(res_939526015), NTI33554439);
    if (((1.0 / f_939526009) == -Infinity)) {
    result_939526013 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_939526015) || []), NTI33554439);
    }
    
    Label1: do {
      var i_939526020 = 0;
      var colontmp__469764599 = 0;
      colontmp__469764599 = (result_939526013).length;
      var i_469764600 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469764600 < colontmp__469764599)) break Label3;
            i_939526020 = i_469764600;
            if ((ConstSet9[result_939526013[chckIndx(i_939526020, 0, (result_939526013).length - 1)]] != undefined)) {
            result_939526013[chckIndx(i_939526020, 0, (result_939526013).length - 1)] = decimalSep_939526012;
            }
            
            i_469764600 = addInt(i_469764600, 1);
          }
      } while (false);
    } while (false);

  return result_939526013;

}

function insert_33557846(x_33557847, x_33557847_Idx, item_33557848, i_33557849) {
    var xl_33557850 = (x_33557847[x_33557847_Idx]).length;
    (x_33557847[x_33557847_Idx].length = chckRange(addInt(xl_33557850, (item_33557848).length), 0, 2147483647));
    var j_33557851 = subInt(xl_33557850, 1);
    Label1: do {
        Label2: while (true) {
        if (!(i_33557849 <= j_33557851)) break Label2;
          x_33557847[x_33557847_Idx][chckIndx(addInt(j_33557851, (item_33557848).length), 0, (x_33557847[x_33557847_Idx]).length - 1)] = x_33557847[x_33557847_Idx][chckIndx(j_33557851, 0, (x_33557847[x_33557847_Idx]).length - 1)];
          j_33557851 = subInt(j_33557851, 1);
        }
    } while (false);
    j_33557851 = 0;
    Label3: do {
        Label4: while (true) {
        if (!(j_33557851 < (item_33557848).length)) break Label4;
          x_33557847[x_33557847_Idx][chckIndx(addInt(j_33557851, i_33557849), 0, (x_33557847[x_33557847_Idx]).length - 1)] = item_33557848[chckIndx(j_33557851, 0, (item_33557848).length - 1)];
          j_33557851 = addInt(j_33557851, 1);
        }
    } while (false);

  
}

function nsuRepeatChar(c_939525115, count_939525116) {
  var result_939525117 = [];

    result_939525117 = nimCopy(null, mnewString(count_939525116), NTI33554439);
    Label1: do {
      var i_939525122 = 0;
      var colontmp__469764605 = 0;
      colontmp__469764605 = subInt(count_939525116, 1);
      var res_469764606 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764606 <= colontmp__469764605)) break Label3;
            i_939525122 = res_469764606;
            result_939525117[chckIndx(i_939525122, 0, (result_939525117).length - 1)] = c_939525115;
            res_469764606 = addInt(res_469764606, 1);
          }
      } while (false);
    } while (false);

  return result_939525117;

}

function validateUtf8_1040187669(s_1040187670) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_1040187671 = 0;

  BeforeRet: do {
    var i_1040187672 = 0;
    var L_1040187673 = (s_1040187670).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_1040187672 < L_1040187673)) break Label2;
          if ((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] <= 127)) {
          i_1040187672 = addInt(i_1040187672, 1);
          }
          else {
          if (((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] >>> 5) == 6)) {
          if ((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] < 194)) {
          result_1040187671 = i_1040187672;
          break BeforeRet;
          }
          
            if (!(addInt(i_1040187672, 1) < L_1040187673)) Temporary3 = false; else {              Temporary3 = ((s_1040187670[chckIndx(addInt(i_1040187672, 1), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_1040187672 = addInt(i_1040187672, 2);
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_1040187672, 2) < L_1040187673)) Temporary5 = false; else {              Temporary5 = ((s_1040187670[chckIndx(addInt(i_1040187672, 1), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_1040187670[chckIndx(addInt(i_1040187672, 2), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          i_1040187672 = addInt(i_1040187672, 3);
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1040187670[chckIndx(i_1040187672, 0, (s_1040187670).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_1040187672, 3) < L_1040187673)) Temporary8 = false; else {              Temporary8 = ((s_1040187670[chckIndx(addInt(i_1040187672, 1), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_1040187670[chckIndx(addInt(i_1040187672, 2), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_1040187670[chckIndx(addInt(i_1040187672, 3), 0, (s_1040187670).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          i_1040187672 = addInt(i_1040187672, 4);
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          
          }
          else {
            result_1040187671 = i_1040187672;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_1040187671 = -1;
    break BeforeRet;
  } while (false);

  return result_1040187671;

}

function nucruneLen(s_1040187402) {
  var result_1040187403 = 0;

    result_1040187403 = 0;
    var i_1040187404 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1040187404 < (s_1040187402).length)) break Label2;
          if ((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] <= 127)) {
          i_1040187404 = addInt(i_1040187404, 1);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 5) == 6)) {
          i_1040187404 = addInt(i_1040187404, 2);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 4) == 14)) {
          i_1040187404 = addInt(i_1040187404, 3);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 3) == 30)) {
          i_1040187404 = addInt(i_1040187404, 4);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 2) == 62)) {
          i_1040187404 = addInt(i_1040187404, 5);
          }
          else {
          if (((s_1040187402[chckIndx(i_1040187404, 0, (s_1040187402).length - 1)] >>> 1) == 126)) {
          i_1040187404 = addInt(i_1040187404, 6);
          }
          else {
          i_1040187404 = addInt(i_1040187404, 1);
          }
          }}}}}
          result_1040187403 = addInt(result_1040187403, 1);
        }
    } while (false);

  return result_1040187403;

}

function alignString_1107296276(s_1107296277, minimumWidth_1107296278, align_1107296279, fill_1107296280) {
      var Temporary1;

  var result_1107296281 = [];

    if ((minimumWidth_1107296278 == 0)) {
    result_1107296281 = nimCopy(null, s_1107296277, NTI33554439);
    }
    else {
      if ((validateUtf8_1040187669(s_1107296277) == -1)) {
      Temporary1 = nucruneLen(s_1107296277);
      }
      else {
      Temporary1 = (s_1107296277).length;
      }
      
      var sRuneLen_1107296282 = Temporary1;
      var toFill_1107296283 = subInt(minimumWidth_1107296278, sRuneLen_1107296282);
      if ((toFill_1107296283 <= 0)) {
      result_1107296281 = nimCopy(null, s_1107296277, NTI33554439);
      }
      else {
      if (((align_1107296279 == 60) || (align_1107296279 == 0))) {
      result_1107296281 = nimCopy(null, (s_1107296277 || []).concat(nsuRepeatChar(fill_1107296280, chckRange(toFill_1107296283, 0, 2147483647)) || []), NTI33554439);
      }
      else {
      if ((align_1107296279 == 94)) {
      var half_1107296284 = divInt(toFill_1107296283, 2);
      result_1107296281 = nimCopy(null, (nsuRepeatChar(fill_1107296280, chckRange(half_1107296284, 0, 2147483647)) || []).concat(s_1107296277 || [],nsuRepeatChar(fill_1107296280, chckRange(subInt(toFill_1107296283, half_1107296284), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        result_1107296281 = nimCopy(null, (nsuRepeatChar(fill_1107296280, chckRange(toFill_1107296283, 0, 2147483647)) || []).concat(s_1107296277 || []), NTI33554439);
      }
      }}
    }
    

  return result_1107296281;

}

function nsuToUpperAsciiChar(c_939524183) {
  var result_939524184 = 0;

    if ((ConstSet11[c_939524183] != undefined)) {
    result_939524184 = (c_939524183 ^ 32);
    }
    else {
      result_939524184 = c_939524183;
    }
    

  return result_939524184;

}

function nsuToUpperAsciiStr(s_939524190) {
  var result_939524191 = [];

    result_939524191 = nimCopy(null, mnewString(chckRange((s_939524190).length, 0, 2147483647)), NTI33554439);
    Label1: do {
      var iHEX60gensym11_939524197 = 0;
      var colontmp__469764611 = 0;
      colontmp__469764611 = subInt((s_939524190).length, 1);
      var res_469764612 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764612 <= colontmp__469764611)) break Label3;
            iHEX60gensym11_939524197 = res_469764612;
            result_939524191[chckIndx(iHEX60gensym11_939524197, 0, (result_939524191).length - 1)] = nsuToUpperAsciiChar(s_939524190[chckIndx(iHEX60gensym11_939524197, 0, (s_939524190).length - 1)]);
            res_469764612 = addInt(res_469764612, 1);
          }
      } while (false);
    } while (false);

  return result_939524191;

}

function formatValue_469764205(result_469764207, result_469764207_Idx, value_469764208, specifier_469764209) {
    var Temporary1;

  BeforeRet: do {
    if (((specifier_469764209).length == 0)) {
    result_469764207[result_469764207_Idx].push.apply(result_469764207[result_469764207_Idx], HEX24_33557368(value_469764208));;
    break BeforeRet;
    }
    
    var spec_469764213 = parseStandardFormatSpecifier_1107296314(specifier_469764209, 0, false);
    var fmode_469764214 = 0;
    switch (spec_469764213.typ) {
    case 101:
    case 69:
      fmode_469764214 = 2;
      break;
    case 102:
    case 70:
      fmode_469764214 = 1;
      break;
    case 103:
    case 71:
      fmode_469764214 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_469764213.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_469764216 = [nsuformatBiggestFloat(value_469764208, fmode_469764214, chckRange(spec_469764213.precision, -1, 32), 46)];
    var sign_469764217 = false;
    if ((0.0 <= value_469764208)) {
    if (!((spec_469764213.sign == 45))) {
    sign_469764217 = true;
    if ((value_469764208 == 0.0)) {
    if (((1.0 / value_469764208) == Infinity)) {
    insert_33557846(f_469764216, 0, nimCharToStr(spec_469764213.sign), 0);
    }
    
    }
    else {
    insert_33557846(f_469764216, 0, nimCharToStr(spec_469764213.sign), 0);
    }
    
    }
    
    }
    else {
      sign_469764217 = true;
    }
    
    if (spec_469764213.padWithZero) {
    var signStr_469764218 = [];
    if (sign_469764217) {
    signStr_469764218 = nimCopy(null, nimCharToStr(f_469764216[0][chckIndx(0, 0, (f_469764216[0]).length - 1)]), NTI33554439);
    f_469764216[0] = nimCopy(null, HEX5BHEX5D_1040190618(f_469764216[0], HEX2EHEX2E_973078608(1, 1)), NTI33554439);
    }
    
    var toFill_469764240 = subInt(subInt(spec_469764213.minimumWidth, (f_469764216[0]).length), (sign_469764217 ? 1 : 0));
    if ((0 < toFill_469764240)) {
    f_469764216[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_469764240, 0, 2147483647)) || []).concat(f_469764216[0] || []), NTI33554439);
    }
    
    if (sign_469764217) {
    f_469764216[0] = nimCopy(null, (signStr_469764218 || []).concat(f_469764216[0] || []), NTI33554439);
    }
    
    }
    
    if ((spec_469764213.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_469764213.align;
    }
    
    var align_469764241 = Temporary1;
    var res_469764242 = alignString_1107296276(f_469764216[0], spec_469764213.minimumWidth, align_469764241, spec_469764213.fill);
    if ((ConstSet10[spec_469764213.typ] != undefined)) {
    result_469764207[result_469764207_Idx].push.apply(result_469764207[result_469764207_Idx], nsuToUpperAsciiStr(res_469764242));;
    }
    else {
    result_469764207[result_469764207_Idx].push.apply(result_469764207[result_469764207_Idx], res_469764242);;
    }
    
  } while (false);

  
}

function HEX2DHEX3D_469764197(x_469764199, x_469764199_Idx, y_469764200) {
    x_469764199[x_469764199_Idx] = (x_469764199[x_469764199_Idx] - y_469764200);

  
}

function round_469764193(x_469764195) {
  var result_469764196 = [0.0];

    if ((0.0 <= x_469764195)) {
    result_469764196[0] = Math.round(x_469764195);
    }
    else {
      result_469764196[0] = Math.ceil(x_469764195);
      if ((0.5 <= (result_469764196[0] - x_469764195))) {
      HEX2DHEX3D_469764197(result_469764196, 0, 1.0);
      }
      
    }
    

  return result_469764196[0];

}

function round_469764188(x_469764190, places_469764191) {
  var result_469764192 = 0.0;

    if ((places_469764191 == 0)) {
    result_469764192 = round_469764193(x_469764190);
    }
    else {
      var mult_469764201 = Math.pow(10.0, places_469764191);
      result_469764192 = (round_469764193((x_469764190 * mult_469764201)) / mult_469764201);
    }
    

  return result_469764192;

}

function displayGpa_469764170(gpa_469764171, unweightedgpa_469764172) {
    
function doAnimate_469764173() {
        
function innerHEX60gensym28_469764281() {
          var result_469764282 = null;

          BeforeRet: do {
            var a_469764283 = null;
            a_469764283 = {};
            a_469764283["width"] = "275px";
            a_469764283["opacity"] = "1";
            result_469764282 = a_469764283;
            break BeforeRet;
          } while (false);

          return result_469764282;

        }
        
function innerHEX60gensym37_469764317() {
          var result_469764318 = null;

          BeforeRet: do {
            var a_469764319 = null;
            a_469764319 = {};
            a_469764319["duration"] = 400;
            a_469764319["iterations"] = 1;
            result_469764318 = a_469764319;
            break BeforeRet;
          } while (false);

          return result_469764318;

        }
        
function HEX3Aanonymous_469764338() {
            gpaDiv_469764268.style.opacity = "1";
            gpaDiv_469764268.style.width = "275px";

          
        }

        var fmtRes_469764182 = [mnewString(0)];
        fmtRes_469764182[0].push.apply(fmtRes_469764182[0], makeNimstrLit("<div id=\"gpa\" style=\"height: 100px; opacity: 1; width: 200px; display: flex; justify-content: center; align-items: center; margin: auto;\">\x0A            <p class=\"gpa\" style=\"color:#ffffff;background-color:#1565c0;text-align:center; width:150px;border-radius:25px 0px 0px 25px;margin:0 auto;margin-top:10px; height:50px; box-shadow: 2px 2px 4px rgba(0, 0, 0, .4); line-height:25px; border-color: rgb(187, 187, 187);border-right-style: solid;\"> Weighted <br />"));;
        formatValue_469764205(fmtRes_469764182, 0, round_469764188(gpa_469764171, 2), []);
        fmtRes_469764182[0].push.apply(fmtRes_469764182[0], makeNimstrLit("</p>\x0A            <p class=\"gpa\" style=\"color:#ffffff;background-color:#1565c0;text-align:center; width:150px;border-radius:0px 25px 25px 0px;margin:0 auto;margin-top:10px; height:50px; box-shadow: 2px 2px 4px rgba(0, 0, 0, .4); line-height:25px; border-color: rgb(187, 187, 187);border-left-style: solid;\"> Unweighted <br />"));;
        formatValue_469764205(fmtRes_469764182, 0, round_469764188(unweightedgpa_469764172, 2), []);
        fmtRes_469764182[0].push.apply(fmtRes_469764182[0], makeNimstrLit("</p>\x0A        <div>"));;
        var html_469764265 = nimCopy(null, fmtRes_469764182[0], NTI33554439);
        var prsr_469764266 = new DOMParser();
        var gpaDOM_469764267 = prsr_469764266.parseFromString(toJSStr(html_469764265), "text/html").documentElement;
        document.querySelector("#loading").remove();
        document.querySelector("p[class='sectionTitle']").appendChild(gpaDOM_469764267);
        var gpaDiv_469764268 = document.querySelector("#gpa");
        gpaDiv_469764268.style.opacity = "0.6";
        gpaDiv_469764268.animate([innerHEX60gensym28_469764281()],innerHEX60gensym37_469764317()).onfinish = HEX3Aanonymous_469764338;

      
    }

  BeforeRet: do {
    if (!(calculating_469762128[0])) {
    break BeforeRet;
    }
    
    if (isNaN(gpa_469764171)) {
    document.querySelector("#loading").remove();
    break BeforeRet;
    }
    
    var _ = setTimeout(doAnimate_469764173, 1000);
  } while (false);

  
}

function initalCalculate_469764397() {
  BeforeRet: do {
    if (calculating_469762128[0]) {
    break BeforeRet;
    }
    
    calculating_469762128[0] = true;
    if (!((document.querySelector("#gpa") == null))) {
    document.querySelector("#gpa").remove();
    }
    
    var prsr_469764401 = new DOMParser();
    var loadingDOM_469764402 = prsr_469764401.parseFromString(loading_469762056, "text/html");
    document.querySelector("p[class='sectionTitle']").appendChild(loadingDOM_469764402.documentElement);
    var colontmp__469764567 = calculateGpaNum_469763610(courses_469762090[0], grades_469762082[0]);
    var gpa_469764403 = colontmp__469764567["Field0"];
    var unweightedgpa_469764404 = colontmp__469764567["Field1"];
    rawEcho(HEX24_33557368(gpa_469764403), HEX24_33557368(unweightedgpa_469764404));
    displayGpa_469764170(gpa_469764403, unweightedgpa_469764404);
  } while (false);

  
}

function main() {
            var Temporary4;
              var Temporary5;
            var Temporary6;

  BeforeRet: do {
    var ogTable_469764418 = document.querySelector("table[class='list']");
    if ((ogTable_469764418 == null)) {
    break BeforeRet;
    }
    
    var grades_and_classes_469764422 = document.querySelector("table[class='list']").rows;
    if ((document.querySelector("p[class='sectionTitle']") == null)) {
    break BeforeRet;
    }
    
    if ((document.querySelector("#loadingStyles") == null)) {
    var styledom_469764429 = document.createElement("style");
    styledom_469764429.id = "loadingStyles";
    styledom_469764429.textContent = loadingStyles_469762055;
    document.querySelector("p[class='sectionTitle']").appendChild(styledom_469764429);
    }
    
    Label1: do {
      var i_469764438 = 0;
      var colontmp__469764528 = 0;
      colontmp__469764528 = subInt((grades_and_classes_469764422).length, 1);
      var res_469764529 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_469764529 <= colontmp__469764528)) break Label3;
            i_469764438 = res_469764529;
            var name_469764439 = cstrToNimstr((Temporary4 = grades_and_classes_469764422[chckIndx(i_469764438, 0, (grades_and_classes_469764422).length - 1)].cells, Temporary4)[chckIndx(0, 0, (Temporary4).length - 1)].innerText);
            if ((((grades_and_classes_469764422[chckIndx(i_469764438, 0, (grades_and_classes_469764422).length - 1)].cells).length < 3) || ((Temporary5 = grades_and_classes_469764422[chckIndx(i_469764438, 0, (grades_and_classes_469764422).length - 1)].cells, Temporary5)[chckIndx(2, 0, (Temporary5).length - 1)] == null))) {
            break BeforeRet;
            }
            
            var grade_469764446 = cstrToNimstr((Temporary6 = grades_and_classes_469764422[chckIndx(i_469764438, 0, (grades_and_classes_469764422).length - 1)].cells, Temporary6)[chckIndx(2, 0, (Temporary6).length - 1)].innerText.replace(new RegExp("[^A-F+-]","g"),""));
            if (ifValid_469763560(name_469764439, grade_469764446)) {
            var Temporary7 = nimCopy(null, grade_469764446, NTI33554439);
            grades_469762082[0].push(Temporary7);;
            var Temporary8 = nimCopy(null, name_469764439, NTI33554439);
            courses_469762090[0].push(Temporary8);;
            }
            
            res_469764529 = addInt(res_469764529, 1);
          }
      } while (false);
    } while (false);
    if ((((courses_469762090[0]).length == 0) || ((grades_469762082[0]).length == 0))) {
    break BeforeRet;
    }
    
    rawEcho(HEX24_469764485(courses_469762090[0]), HEX24_469764485(grades_469762082[0]));
    if ((document.querySelector("#loading") == null)) {
    initalCalculate_469764397();
    }
    
  } while (false);

  
}
if (true) {
main();
}

